// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: packages/core/src/protos/legacy_tank_definitions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blitzkit {

  /// <summary>Holder for reflection information generated from packages/core/src/protos/legacy_tank_definitions.proto</summary>
  public static partial class LegacyTankDefinitionsReflection {

    #region Descriptor
    /// <summary>File descriptor for packages/core/src/protos/legacy_tank_definitions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LegacyTankDefinitionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZwYWNrYWdlcy9jb3JlL3NyYy9wcm90b3MvbGVnYWN5X3RhbmtfZGVmaW5p",
            "dGlvbnMucHJvdG8SCGJsaXR6a2l0GipwYWNrYWdlcy9jb3JlL3NyYy9wcm90",
            "b3MvbGVnYWN5X2kxOG4ucHJvdG8ijgEKD1RhbmtEZWZpbml0aW9ucxIzCgV0",
            "YW5rcxgBIAMoCzIkLmJsaXR6a2l0LlRhbmtEZWZpbml0aW9ucy5UYW5rc0Vu",
            "dHJ5GkYKClRhbmtzRW50cnkSCwoDa2V5GAEgASgNEicKBXZhbHVlGAIgASgL",
            "MhguYmxpdHpraXQuVGFua0RlZmluaXRpb246AjgBIowHCg5UYW5rRGVmaW5p",
            "dGlvbhIKCgJpZBgBIAIoDRIyCgVyb2xlcxgCIAMoCzIjLmJsaXR6a2l0LlRh",
            "bmtEZWZpbml0aW9uLlJvbGVzRW50cnkSGAoQZml4ZWRfY2Ftb3VmbGFnZRgE",
            "IAIoCBITCgtjYW1vdWZsYWdlcxgFIAMoBRIRCglhbmNlc3RvcnMYBiADKAUS",
            "EgoKc3VjY2Vzc29ycxgHIAMoBRIcCgRjcmV3GAggAygLMg4uYmxpdHpraXQu",
            "Q3JldxIOCgZoZWFsdGgYCSACKA0SDgoGbmF0aW9uGAogAigJEiIKBG5hbWUY",
            "CyACKAsyFC5ibGl0emtpdC5JMThuU3RyaW5nEicKCW5hbWVfZnVsbBgMIAEo",
            "CzIULmJsaXR6a2l0LkkxOG5TdHJpbmcSIAoEdHlwZRgNIAIoDjISLmJsaXR6",
            "a2l0LlRhbmtUeXBlEhcKD21heF9jb25zdW1hYmxlcxgOIAIoDRIWCg5tYXhf",
            "cHJvdmlzaW9ucxgPIAIoDRIMCgR0aWVyGBAgAigNEiIKBWNsYXNzGBEgAigO",
            "MhMuYmxpdHpraXQuVGFua0NsYXNzEg8KB3Rlc3RpbmcYEiACKAgSEgoKZGVw",
            "cmVjYXRlZBgTIAIoCBIrCgd0dXJyZXRzGBQgAygLMhouYmxpdHpraXQuVHVy",
            "cmV0RGVmaW5pdGlvbhIrCgdlbmdpbmVzGBUgAygLMhouYmxpdHpraXQuRW5n",
            "aW5lRGVmaW5pdGlvbhIpCgZ0cmFja3MYFiADKAsyGS5ibGl0emtpdC5UcmFj",
            "a0RlZmluaXRpb24SIgoFcHJpY2UYFyACKAsyEy5ibGl0emtpdC5UYW5rUHJp",
            "Y2USLQoNcmVzZWFyY2hfY29zdBgYIAEoCzIWLmJsaXR6a2l0LlJlc2VhcmNo",
            "Q29zdBIWCg5zcGVlZF9mb3J3YXJkcxgZIAIoAhIXCg9zcGVlZF9iYWNrd2Fy",
            "ZHMYGiACKAISGAoQY2Ftb3VmbGFnZV9zdGlsbBgbIAIoAhIZChFjYW1vdWZs",
            "YWdlX21vdmluZxgcIAIoAhIZChFjYW1vdWZsYWdlX29uRmlyZRgdIAIoAhIY",
            "ChBlcXVpcG1lbnRfcHJlc2V0GB4gAigJEg4KBndlaWdodBgfIAIoDRosCgpS",
            "b2xlc0VudHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoDToCOAEicwoM",
            "UmVzZWFyY2hDb3N0EgwKAnhwGAEgASgNSAASPwoPc2Vhc29uYWxfdG9rZW5z",
            "GAIgASgLMiQuYmxpdHpraXQuUmVzZWFyY2hDb3N0U2Vhc29uYWxUb2tlbnNI",
            "AEIUChJyZXNlYXJjaF9jb3N0X3R5cGUiPAoaUmVzZWFyY2hDb3N0U2Vhc29u",
            "YWxUb2tlbnMSDgoGc2Vhc29uGAEgAigNEg4KBnRva2VucxgCIAIoDSJBCglU",
            "YW5rUHJpY2USJQoEdHlwZRgBIAIoDjIXLmJsaXR6a2l0LlRhbmtQcmljZVR5",
            "cGUSDQoFdmFsdWUYAiACKA0izAIKD1RyYWNrRGVmaW5pdGlvbhIKCgJpZBgB",
            "IAIoDRIMCgR0aWVyGAIgAigNEiIKBG5hbWUYAyACKAsyFC5ibGl0emtpdC5J",
            "MThuU3RyaW5nEg4KBndlaWdodBgEIAIoDRIWCg50cmF2ZXJzZV9zcGVlZBgF",
            "IAIoAhItCg1yZXNlYXJjaF9jb3N0GAYgASgLMhYuYmxpdHpraXQuUmVzZWFy",
            "Y2hDb3N0EhcKD2Rpc3BlcnNpb25fbW92ZRgHIAIoAhIbChNkaXNwZXJzaW9u",
            "X3RyYXZlcnNlGAggAigCEhcKD3Jlc2lzdGFuY2VfaGFyZBgJIAIoAhIZChFy",
            "ZXNpc3RhbmNlX21lZGl1bRgKIAIoAhIXCg9yZXNpc3RhbmNlX3NvZnQYCyAC",
            "KAISIQoHdW5sb2NrcxgMIAMoCzIQLmJsaXR6a2l0LlVubG9jayLWAQoQRW5n",
            "aW5lRGVmaW5pdGlvbhIKCgJpZBgBIAIoDRIiCgRuYW1lGAIgAigLMhQuYmxp",
            "dHpraXQuSTE4blN0cmluZxItCg1yZXNlYXJjaF9jb3N0GAMgASgLMhYuYmxp",
            "dHpraXQuUmVzZWFyY2hDb3N0EgwKBHRpZXIYBCACKA0SEwoLZmlyZV9jaGFu",
            "Y2UYBSACKAISDQoFcG93ZXIYBiACKA0SDgoGd2VpZ2h0GAcgAigNEiEKB3Vu",
            "bG9ja3MYCCADKAsyEC5ibGl0emtpdC5VbmxvY2silQIKEFR1cnJldERlZmlu",
            "aXRpb24SCgoCaWQYASACKA0SDgoGaGVhbHRoGAIgAigNEhIKCnZpZXdfcmFu",
            "Z2UYAyACKA0SFgoOdHJhdmVyc2Vfc3BlZWQYBCACKAISLQoNcmVzZWFyY2hf",
            "Y29zdBgFIAEoCzIWLmJsaXR6a2l0LlJlc2VhcmNoQ29zdBIiCgRuYW1lGAYg",
            "AigLMhQuYmxpdHpraXQuSTE4blN0cmluZxIMCgR0aWVyGAcgAigNEg4KBndl",
            "aWdodBgIIAIoDRIlCgRndW5zGAkgAygLMhcuYmxpdHpraXQuR3VuRGVmaW5p",
            "dGlvbhIhCgd1bmxvY2tzGAogAygLMhAuYmxpdHpraXQuVW5sb2NrIsYBCg1H",
            "dW5EZWZpbml0aW9uEjEKB3JlZ3VsYXIYASABKAsyHi5ibGl0emtpdC5HdW5E",
            "ZWZpbml0aW9uUmVndWxhckgAEjgKC2F1dG9fbG9hZGVyGAIgASgLMiEuYmxp",
            "dHpraXQuR3VuRGVmaW5pdGlvbkF1dG9Mb2FkZXJIABI8Cg1hdXRvX3JlbG9h",
            "ZGVyGAMgASgLMiMuYmxpdHpraXQuR3VuRGVmaW5pdGlvbkF1dG9SZWxvYWRl",
            "ckgAQgoKCGd1bl90eXBlIn4KFEd1bkRlZmluaXRpb25SZWd1bGFyEikKBGJh",
            "c2UYASACKAsyGy5ibGl0emtpdC5HdW5EZWZpbml0aW9uQmFzZRI7CglleHRl",
            "bnNpb24YAiACKAsyKC5ibGl0emtpdC5HdW5EZWZpbml0aW9uUmVndWxhclBy",
            "b3BlcnRpZXMiMAoeR3VuRGVmaW5pdGlvblJlZ3VsYXJQcm9wZXJ0aWVzEg4K",
            "BnJlbG9hZBgBIAIoAiKEAQoXR3VuRGVmaW5pdGlvbkF1dG9Mb2FkZXISKQoE",
            "YmFzZRgBIAIoCzIbLmJsaXR6a2l0Lkd1bkRlZmluaXRpb25CYXNlEj4KCWV4",
            "dGVuc2lvbhgCIAIoCzIrLmJsaXR6a2l0Lkd1bkRlZmluaXRpb25BdXRvTG9h",
            "ZGVyUHJvcGVydGllcyJhCiFHdW5EZWZpbml0aW9uQXV0b0xvYWRlclByb3Bl",
            "cnRpZXMSEwoLY2xpcF9yZWxvYWQYASACKAISEgoKaW50cmFfY2xpcBgCIAIo",
            "AhITCgtzaGVsbF9jb3VudBgDIAIoAiKIAQoZR3VuRGVmaW5pdGlvbkF1dG9S",
            "ZWxvYWRlchIpCgRiYXNlGAEgAigLMhsuYmxpdHpraXQuR3VuRGVmaW5pdGlv",
            "bkJhc2USQAoJZXh0ZW5zaW9uGAIgAigLMi0uYmxpdHpraXQuR3VuRGVmaW5p",
            "dGlvbkF1dG9SZWxvYWRlclByb3BlcnRpZXMiZQojR3VuRGVmaW5pdGlvbkF1",
            "dG9SZWxvYWRlclByb3BlcnRpZXMSFQoNc2hlbGxfcmVsb2FkcxgBIAMoAhIS",
            "CgppbnRyYV9jbGlwGAIgAigCEhMKC3NoZWxsX2NvdW50GAMgAigCIqQDChFH",
            "dW5EZWZpbml0aW9uQmFzZRIKCgJpZBgBIAIoDRIWCg5yb3RhdGlvbl9zcGVl",
            "ZBgCIAIoAhItCg1yZXNlYXJjaF9jb3N0GAMgASgLMhYuYmxpdHpraXQuUmVz",
            "ZWFyY2hDb3N0Eg4KBndlaWdodBgEIAIoDRIiCgRuYW1lGAUgAigLMhQuYmxp",
            "dHpraXQuSTE4blN0cmluZxIMCgR0aWVyGAYgAigNEikKBnNoZWxscxgHIAMo",
            "CzIZLmJsaXR6a2l0LlNoZWxsRGVmaW5pdGlvbhIXCg9jYW1vdWZsYWdlX2xv",
            "c3MYCCACKAISEAoIYWltX3RpbWUYCSACKAISFwoPZGlzcGVyc2lvbl9iYXNl",
            "GAogAigCEhsKE2Rpc3BlcnNpb25fdHJhdmVyc2UYCyACKAISFwoPZGlzcGVy",
            "c2lvbl9zaG90GAwgAigCEhoKEmRpc3BlcnNpb25fZGFtYWdlZBgNIAIoAhIh",
            "Cgd1bmxvY2tzGA4gAygLMhAuYmxpdHpraXQuVW5sb2NrEhYKDnNoZWxsX2Nh",
            "cGFjaXR5GA8gAigNIsUCCg9TaGVsbERlZmluaXRpb24SCgoCaWQYASACKA0S",
            "IgoEbmFtZRgCIAIoCzIULmJsaXR6a2l0LkkxOG5TdHJpbmcSEAoIdmVsb2Np",
            "dHkYAyACKA0SFAoMYXJtb3JfZGFtYWdlGAQgAigNEhUKDW1vZHVsZV9kYW1h",
            "Z2UYBSACKA0SDwoHY2FsaWJlchgGIAIoAhIMCgRpY29uGAcgAigJEi8KC3Bl",
            "bmV0cmF0aW9uGAggAigLMhouYmxpdHpraXQuU2hlbGxQZW5ldHJhdGlvbhIh",
            "CgR0eXBlGAkgAigOMhMuYmxpdHpraXQuU2hlbGxUeXBlEhUKDW5vcm1hbGl6",
            "YXRpb24YCiABKAISEAoIcmljb2NoZXQYCyABKAISGAoQZXhwbG9zaW9uX3Jh",
            "ZGl1cxgMIAEoAhINCgVyYW5nZRgNIAIoDSItChBTaGVsbFBlbmV0cmF0aW9u",
            "EgwKBG5lYXIYASACKAISCwoDZmFyGAIgAigCIlwKBlVubG9jaxIKCgJpZBgB",
            "IAIoBRIiCgR0eXBlGAIgAigOMhQuYmxpdHpraXQuTW9kdWxlVHlwZRIiCgRj",
            "b3N0GAMgAigLMhQuYmxpdHpraXQuVW5sb2NrQ29zdCIpCgpVbmxvY2tDb3N0",
            "EgwKBHR5cGUYASACKAkSDQoFdmFsdWUYAiACKAUiXwoEQ3JldxIgCgR0eXBl",
            "GAEgAigOMhIuYmxpdHpraXQuQ3Jld1R5cGUSDQoFY291bnQYAiACKA0SJgoK",
            "c3Vic3RpdHV0ZRgDIAMoDjISLmJsaXR6a2l0LkNyZXdUeXBlKkYKDVRhbmtQ",
            "cmljZVR5cGUSGwoXVEFOS19QUklDRV9UWVBFX0NSRURJVFMQABIYChRUQU5L",
            "X1BSSUNFX1RZUEVfR09MRBABKlsKCVNoZWxsVHlwZRIRCg1TSEVMTF9UWVBF",
            "X0FQEAASEwoPU0hFTExfVFlQRV9BUENSEAESEwoPU0hFTExfVFlQRV9IRUFU",
            "EAISEQoNU0hFTExfVFlQRV9IRRADKoIBCgpNb2R1bGVUeXBlEhcKE01PRFVM",
            "RV9UWVBFX1ZFSElDTEUQABIWChJNT0RVTEVfVFlQRV9FTkdJTkUQARIWChJN",
            "T0RVTEVfVFlQRV9UUkFDS1MQAhIWChJNT0RVTEVfVFlQRV9UVVJSRVQQAxIT",
            "Cg9NT0RVTEVfVFlQRV9HVU4QBCptCglUYW5rQ2xhc3MSFAoQVEFOS19DTEFT",
            "U19MSUdIVBAAEhUKEVRBTktfQ0xBU1NfTUVESVVNEAESFAoQVEFOS19DTEFT",
            "U19IRUFWWRACEh0KGVRBTktfQ0xBU1NfVEFOS19ERVNUUk9ZRVIQAypWCghU",
            "YW5rVHlwZRIaChZUQU5LX1RZUEVfUkVTRUFSQ0hBQkxFEAASFQoRVEFOS19U",
            "WVBFX1BSRU1JVU0QARIXChNUQU5LX1RZUEVfQ09MTEVDVE9SEAIqfQoIQ3Jl",
            "d1R5cGUSFwoTQ1JFV19UWVBFX0NPTU1BTkRFUhAAEhYKEkNSRVdfVFlQRV9S",
            "QURJT01BThABEhQKEENSRVdfVFlQRV9HVU5ORVIQAhIUChBDUkVXX1RZUEVf",
            "RFJJVkVSEAMSFAoQQ1JFV19UWVBFX0xPQURFUhAE"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Blitzkit.LegacyI18NReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Blitzkit.TankPriceType), typeof(global::Blitzkit.ShellType), typeof(global::Blitzkit.ModuleType), typeof(global::Blitzkit.TankClass), typeof(global::Blitzkit.TankType), typeof(global::Blitzkit.CrewType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.TankDefinitions), global::Blitzkit.TankDefinitions.Parser, new[]{ "Tanks" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.TankDefinition), global::Blitzkit.TankDefinition.Parser, new[]{ "Id", "Roles", "FixedCamouflage", "Camouflages", "Ancestors", "Successors", "Crew", "Health", "Nation", "Name", "NameFull", "Type", "MaxConsumables", "MaxProvisions", "Tier", "Class", "Testing", "Deprecated", "Turrets", "Engines", "Tracks", "Price", "ResearchCost", "SpeedForwards", "SpeedBackwards", "CamouflageStill", "CamouflageMoving", "CamouflageOnFire", "EquipmentPreset", "Weight" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.ResearchCost), global::Blitzkit.ResearchCost.Parser, new[]{ "Xp", "SeasonalTokens" }, new[]{ "ResearchCostType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.ResearchCostSeasonalTokens), global::Blitzkit.ResearchCostSeasonalTokens.Parser, new[]{ "Season", "Tokens" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.TankPrice), global::Blitzkit.TankPrice.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.TrackDefinition), global::Blitzkit.TrackDefinition.Parser, new[]{ "Id", "Tier", "Name", "Weight", "TraverseSpeed", "ResearchCost", "DispersionMove", "DispersionTraverse", "ResistanceHard", "ResistanceMedium", "ResistanceSoft", "Unlocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.EngineDefinition), global::Blitzkit.EngineDefinition.Parser, new[]{ "Id", "Name", "ResearchCost", "Tier", "FireChance", "Power", "Weight", "Unlocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.TurretDefinition), global::Blitzkit.TurretDefinition.Parser, new[]{ "Id", "Health", "ViewRange", "TraverseSpeed", "ResearchCost", "Name", "Tier", "Weight", "Guns", "Unlocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinition), global::Blitzkit.GunDefinition.Parser, new[]{ "Regular", "AutoLoader", "AutoReloader" }, new[]{ "GunType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionRegular), global::Blitzkit.GunDefinitionRegular.Parser, new[]{ "Base", "Extension" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionRegularProperties), global::Blitzkit.GunDefinitionRegularProperties.Parser, new[]{ "Reload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionAutoLoader), global::Blitzkit.GunDefinitionAutoLoader.Parser, new[]{ "Base", "Extension" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionAutoLoaderProperties), global::Blitzkit.GunDefinitionAutoLoaderProperties.Parser, new[]{ "ClipReload", "IntraClip", "ShellCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionAutoReloader), global::Blitzkit.GunDefinitionAutoReloader.Parser, new[]{ "Base", "Extension" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionAutoReloaderProperties), global::Blitzkit.GunDefinitionAutoReloaderProperties.Parser, new[]{ "ShellReloads", "IntraClip", "ShellCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.GunDefinitionBase), global::Blitzkit.GunDefinitionBase.Parser, new[]{ "Id", "RotationSpeed", "ResearchCost", "Weight", "Name", "Tier", "Shells", "CamouflageLoss", "AimTime", "DispersionBase", "DispersionTraverse", "DispersionShot", "DispersionDamaged", "Unlocks", "ShellCapacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.ShellDefinition), global::Blitzkit.ShellDefinition.Parser, new[]{ "Id", "Name", "Velocity", "ArmorDamage", "ModuleDamage", "Caliber", "Icon", "Penetration", "Type", "Normalization", "Ricochet", "ExplosionRadius", "Range" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.ShellPenetration), global::Blitzkit.ShellPenetration.Parser, new[]{ "Near", "Far" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.Unlock), global::Blitzkit.Unlock.Parser, new[]{ "Id", "Type", "Cost" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.UnlockCost), global::Blitzkit.UnlockCost.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.Crew), global::Blitzkit.Crew.Parser, new[]{ "Type", "Count", "Substitute" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TankPriceType {
    [pbr::OriginalName("TANK_PRICE_TYPE_CREDITS")] Credits = 0,
    [pbr::OriginalName("TANK_PRICE_TYPE_GOLD")] Gold = 1,
  }

  public enum ShellType {
    [pbr::OriginalName("SHELL_TYPE_AP")] Ap = 0,
    [pbr::OriginalName("SHELL_TYPE_APCR")] Apcr = 1,
    [pbr::OriginalName("SHELL_TYPE_HEAT")] Heat = 2,
    [pbr::OriginalName("SHELL_TYPE_HE")] He = 3,
  }

  public enum ModuleType {
    [pbr::OriginalName("MODULE_TYPE_VEHICLE")] Vehicle = 0,
    [pbr::OriginalName("MODULE_TYPE_ENGINE")] Engine = 1,
    [pbr::OriginalName("MODULE_TYPE_TRACKS")] Tracks = 2,
    [pbr::OriginalName("MODULE_TYPE_TURRET")] Turret = 3,
    [pbr::OriginalName("MODULE_TYPE_GUN")] Gun = 4,
  }

  public enum TankClass {
    [pbr::OriginalName("TANK_CLASS_LIGHT")] Light = 0,
    [pbr::OriginalName("TANK_CLASS_MEDIUM")] Medium = 1,
    [pbr::OriginalName("TANK_CLASS_HEAVY")] Heavy = 2,
    [pbr::OriginalName("TANK_CLASS_TANK_DESTROYER")] TankDestroyer = 3,
  }

  public enum TankType {
    [pbr::OriginalName("TANK_TYPE_RESEARCHABLE")] Researchable = 0,
    [pbr::OriginalName("TANK_TYPE_PREMIUM")] Premium = 1,
    [pbr::OriginalName("TANK_TYPE_COLLECTOR")] Collector = 2,
  }

  public enum CrewType {
    [pbr::OriginalName("CREW_TYPE_COMMANDER")] Commander = 0,
    [pbr::OriginalName("CREW_TYPE_RADIOMAN")] Radioman = 1,
    [pbr::OriginalName("CREW_TYPE_GUNNER")] Gunner = 2,
    [pbr::OriginalName("CREW_TYPE_DRIVER")] Driver = 3,
    [pbr::OriginalName("CREW_TYPE_LOADER")] Loader = 4,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TankDefinitions : pb::IMessage<TankDefinitions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TankDefinitions> _parser = new pb::MessageParser<TankDefinitions>(() => new TankDefinitions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TankDefinitions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinitions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinitions(TankDefinitions other) : this() {
      tanks_ = other.tanks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinitions Clone() {
      return new TankDefinitions(this);
    }

    /// <summary>Field number for the "tanks" field.</summary>
    public const int TanksFieldNumber = 1;
    private static readonly pbc::MapField<uint, global::Blitzkit.TankDefinition>.Codec _map_tanks_codec
        = new pbc::MapField<uint, global::Blitzkit.TankDefinition>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Blitzkit.TankDefinition.Parser), 10);
    private readonly pbc::MapField<uint, global::Blitzkit.TankDefinition> tanks_ = new pbc::MapField<uint, global::Blitzkit.TankDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Blitzkit.TankDefinition> Tanks {
      get { return tanks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TankDefinitions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TankDefinitions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Tanks.Equals(other.Tanks)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Tanks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tanks_.WriteTo(output, _map_tanks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tanks_.WriteTo(ref output, _map_tanks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tanks_.CalculateSize(_map_tanks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TankDefinitions other) {
      if (other == null) {
        return;
      }
      tanks_.MergeFrom(other.tanks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tanks_.AddEntriesFrom(input, _map_tanks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tanks_.AddEntriesFrom(ref input, _map_tanks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TankDefinition : pb::IMessage<TankDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TankDefinition> _parser = new pb::MessageParser<TankDefinition>(() => new TankDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TankDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinition(TankDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      roles_ = other.roles_.Clone();
      fixedCamouflage_ = other.fixedCamouflage_;
      camouflages_ = other.camouflages_.Clone();
      ancestors_ = other.ancestors_.Clone();
      successors_ = other.successors_.Clone();
      crew_ = other.crew_.Clone();
      health_ = other.health_;
      nation_ = other.nation_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      nameFull_ = other.nameFull_ != null ? other.nameFull_.Clone() : null;
      type_ = other.type_;
      maxConsumables_ = other.maxConsumables_;
      maxProvisions_ = other.maxProvisions_;
      tier_ = other.tier_;
      class_ = other.class_;
      testing_ = other.testing_;
      deprecated_ = other.deprecated_;
      turrets_ = other.turrets_.Clone();
      engines_ = other.engines_.Clone();
      tracks_ = other.tracks_.Clone();
      price_ = other.price_ != null ? other.price_.Clone() : null;
      researchCost_ = other.researchCost_ != null ? other.researchCost_.Clone() : null;
      speedForwards_ = other.speedForwards_;
      speedBackwards_ = other.speedBackwards_;
      camouflageStill_ = other.camouflageStill_;
      camouflageMoving_ = other.camouflageMoving_;
      camouflageOnFire_ = other.camouflageOnFire_;
      equipmentPreset_ = other.equipmentPreset_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankDefinition Clone() {
      return new TankDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 2;
    private static readonly pbc::MapField<uint, uint>.Codec _map_roles_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 18);
    private readonly pbc::MapField<uint, uint> roles_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "fixed_camouflage" field.</summary>
    public const int FixedCamouflageFieldNumber = 4;
    private readonly static bool FixedCamouflageDefaultValue = false;

    private bool fixedCamouflage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FixedCamouflage {
      get { if ((_hasBits0 & 2) != 0) { return fixedCamouflage_; } else { return FixedCamouflageDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fixedCamouflage_ = value;
      }
    }
    /// <summary>Gets whether the "fixed_camouflage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFixedCamouflage {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fixed_camouflage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFixedCamouflage() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "camouflages" field.</summary>
    public const int CamouflagesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_camouflages_codec
        = pb::FieldCodec.ForInt32(40);
    private readonly pbc::RepeatedField<int> camouflages_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Camouflages {
      get { return camouflages_; }
    }

    /// <summary>Field number for the "ancestors" field.</summary>
    public const int AncestorsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_ancestors_codec
        = pb::FieldCodec.ForInt32(48);
    private readonly pbc::RepeatedField<int> ancestors_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Ancestors {
      get { return ancestors_; }
    }

    /// <summary>Field number for the "successors" field.</summary>
    public const int SuccessorsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_successors_codec
        = pb::FieldCodec.ForInt32(56);
    private readonly pbc::RepeatedField<int> successors_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Successors {
      get { return successors_; }
    }

    /// <summary>Field number for the "crew" field.</summary>
    public const int CrewFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Blitzkit.Crew> _repeated_crew_codec
        = pb::FieldCodec.ForMessage(66, global::Blitzkit.Crew.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.Crew> crew_ = new pbc::RepeatedField<global::Blitzkit.Crew>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.Crew> Crew {
      get { return crew_; }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 9;
    private readonly static uint HealthDefaultValue = 0;

    private uint health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Health {
      get { if ((_hasBits0 & 4) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "nation" field.</summary>
    public const int NationFieldNumber = 10;
    private readonly static string NationDefaultValue = "";

    private string nation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nation {
      get { return nation_ ?? NationDefaultValue; }
      set {
        nation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNation {
      get { return nation_ != null; }
    }
    /// <summary>Clears the value of the "nation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNation() {
      nation_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "name_full" field.</summary>
    public const int NameFullFieldNumber = 12;
    private global::Blitzkit.I18nString nameFull_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString NameFull {
      get { return nameFull_; }
      set {
        nameFull_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 13;
    private readonly static global::Blitzkit.TankType TypeDefaultValue = global::Blitzkit.TankType.Researchable;

    private global::Blitzkit.TankType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.TankType Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "max_consumables" field.</summary>
    public const int MaxConsumablesFieldNumber = 14;
    private readonly static uint MaxConsumablesDefaultValue = 0;

    private uint maxConsumables_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxConsumables {
      get { if ((_hasBits0 & 16) != 0) { return maxConsumables_; } else { return MaxConsumablesDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxConsumables_ = value;
      }
    }
    /// <summary>Gets whether the "max_consumables" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxConsumables {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_consumables" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxConsumables() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "max_provisions" field.</summary>
    public const int MaxProvisionsFieldNumber = 15;
    private readonly static uint MaxProvisionsDefaultValue = 0;

    private uint maxProvisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxProvisions {
      get { if ((_hasBits0 & 32) != 0) { return maxProvisions_; } else { return MaxProvisionsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        maxProvisions_ = value;
      }
    }
    /// <summary>Gets whether the "max_provisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxProvisions {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "max_provisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxProvisions() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 16;
    private readonly static uint TierDefaultValue = 0;

    private uint tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tier {
      get { if ((_hasBits0 & 64) != 0) { return tier_; } else { return TierDefaultValue; } }
      set {
        _hasBits0 |= 64;
        tier_ = value;
      }
    }
    /// <summary>Gets whether the "tier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTier {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "tier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTier() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 17;
    private readonly static global::Blitzkit.TankClass ClassDefaultValue = global::Blitzkit.TankClass.Light;

    private global::Blitzkit.TankClass class_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.TankClass Class {
      get { if ((_hasBits0 & 128) != 0) { return class_; } else { return ClassDefaultValue; } }
      set {
        _hasBits0 |= 128;
        class_ = value;
      }
    }
    /// <summary>Gets whether the "class" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClass {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "class" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClass() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "testing" field.</summary>
    public const int TestingFieldNumber = 18;
    private readonly static bool TestingDefaultValue = false;

    private bool testing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Testing {
      get { if ((_hasBits0 & 256) != 0) { return testing_; } else { return TestingDefaultValue; } }
      set {
        _hasBits0 |= 256;
        testing_ = value;
      }
    }
    /// <summary>Gets whether the "testing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTesting {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "testing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTesting() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "deprecated" field.</summary>
    public const int DeprecatedFieldNumber = 19;
    private readonly static bool DeprecatedDefaultValue = false;

    private bool deprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deprecated {
      get { if ((_hasBits0 & 512) != 0) { return deprecated_; } else { return DeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 512;
        deprecated_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecated {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "deprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecated() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "turrets" field.</summary>
    public const int TurretsFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Blitzkit.TurretDefinition> _repeated_turrets_codec
        = pb::FieldCodec.ForMessage(162, global::Blitzkit.TurretDefinition.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.TurretDefinition> turrets_ = new pbc::RepeatedField<global::Blitzkit.TurretDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.TurretDefinition> Turrets {
      get { return turrets_; }
    }

    /// <summary>Field number for the "engines" field.</summary>
    public const int EnginesFieldNumber = 21;
    private static readonly pb::FieldCodec<global::Blitzkit.EngineDefinition> _repeated_engines_codec
        = pb::FieldCodec.ForMessage(170, global::Blitzkit.EngineDefinition.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.EngineDefinition> engines_ = new pbc::RepeatedField<global::Blitzkit.EngineDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.EngineDefinition> Engines {
      get { return engines_; }
    }

    /// <summary>Field number for the "tracks" field.</summary>
    public const int TracksFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Blitzkit.TrackDefinition> _repeated_tracks_codec
        = pb::FieldCodec.ForMessage(178, global::Blitzkit.TrackDefinition.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.TrackDefinition> tracks_ = new pbc::RepeatedField<global::Blitzkit.TrackDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.TrackDefinition> Tracks {
      get { return tracks_; }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 23;
    private global::Blitzkit.TankPrice price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.TankPrice Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "research_cost" field.</summary>
    public const int ResearchCostFieldNumber = 24;
    private global::Blitzkit.ResearchCost researchCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCost ResearchCost {
      get { return researchCost_; }
      set {
        researchCost_ = value;
      }
    }

    /// <summary>Field number for the "speed_forwards" field.</summary>
    public const int SpeedForwardsFieldNumber = 25;
    private readonly static float SpeedForwardsDefaultValue = 0F;

    private float speedForwards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpeedForwards {
      get { if ((_hasBits0 & 1024) != 0) { return speedForwards_; } else { return SpeedForwardsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        speedForwards_ = value;
      }
    }
    /// <summary>Gets whether the "speed_forwards" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeedForwards {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "speed_forwards" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeedForwards() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "speed_backwards" field.</summary>
    public const int SpeedBackwardsFieldNumber = 26;
    private readonly static float SpeedBackwardsDefaultValue = 0F;

    private float speedBackwards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpeedBackwards {
      get { if ((_hasBits0 & 2048) != 0) { return speedBackwards_; } else { return SpeedBackwardsDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        speedBackwards_ = value;
      }
    }
    /// <summary>Gets whether the "speed_backwards" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeedBackwards {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "speed_backwards" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeedBackwards() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "camouflage_still" field.</summary>
    public const int CamouflageStillFieldNumber = 27;
    private readonly static float CamouflageStillDefaultValue = 0F;

    private float camouflageStill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CamouflageStill {
      get { if ((_hasBits0 & 4096) != 0) { return camouflageStill_; } else { return CamouflageStillDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        camouflageStill_ = value;
      }
    }
    /// <summary>Gets whether the "camouflage_still" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamouflageStill {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "camouflage_still" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamouflageStill() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "camouflage_moving" field.</summary>
    public const int CamouflageMovingFieldNumber = 28;
    private readonly static float CamouflageMovingDefaultValue = 0F;

    private float camouflageMoving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CamouflageMoving {
      get { if ((_hasBits0 & 8192) != 0) { return camouflageMoving_; } else { return CamouflageMovingDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        camouflageMoving_ = value;
      }
    }
    /// <summary>Gets whether the "camouflage_moving" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamouflageMoving {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "camouflage_moving" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamouflageMoving() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "camouflage_onFire" field.</summary>
    public const int CamouflageOnFireFieldNumber = 29;
    private readonly static float CamouflageOnFireDefaultValue = 0F;

    private float camouflageOnFire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CamouflageOnFire {
      get { if ((_hasBits0 & 16384) != 0) { return camouflageOnFire_; } else { return CamouflageOnFireDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        camouflageOnFire_ = value;
      }
    }
    /// <summary>Gets whether the "camouflage_onFire" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamouflageOnFire {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "camouflage_onFire" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamouflageOnFire() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "equipment_preset" field.</summary>
    public const int EquipmentPresetFieldNumber = 30;
    private readonly static string EquipmentPresetDefaultValue = "";

    private string equipmentPreset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EquipmentPreset {
      get { return equipmentPreset_ ?? EquipmentPresetDefaultValue; }
      set {
        equipmentPreset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "equipment_preset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEquipmentPreset {
      get { return equipmentPreset_ != null; }
    }
    /// <summary>Clears the value of the "equipment_preset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEquipmentPreset() {
      equipmentPreset_ = null;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 31;
    private readonly static uint WeightDefaultValue = 0;

    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Weight {
      get { if ((_hasBits0 & 32768) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~32768;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TankDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TankDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!Roles.Equals(other.Roles)) return false;
      if (FixedCamouflage != other.FixedCamouflage) return false;
      if(!camouflages_.Equals(other.camouflages_)) return false;
      if(!ancestors_.Equals(other.ancestors_)) return false;
      if(!successors_.Equals(other.successors_)) return false;
      if(!crew_.Equals(other.crew_)) return false;
      if (Health != other.Health) return false;
      if (Nation != other.Nation) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(NameFull, other.NameFull)) return false;
      if (Type != other.Type) return false;
      if (MaxConsumables != other.MaxConsumables) return false;
      if (MaxProvisions != other.MaxProvisions) return false;
      if (Tier != other.Tier) return false;
      if (Class != other.Class) return false;
      if (Testing != other.Testing) return false;
      if (Deprecated != other.Deprecated) return false;
      if(!turrets_.Equals(other.turrets_)) return false;
      if(!engines_.Equals(other.engines_)) return false;
      if(!tracks_.Equals(other.tracks_)) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (!object.Equals(ResearchCost, other.ResearchCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedForwards, other.SpeedForwards)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedBackwards, other.SpeedBackwards)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CamouflageStill, other.CamouflageStill)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CamouflageMoving, other.CamouflageMoving)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CamouflageOnFire, other.CamouflageOnFire)) return false;
      if (EquipmentPreset != other.EquipmentPreset) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      hash ^= Roles.GetHashCode();
      if (HasFixedCamouflage) hash ^= FixedCamouflage.GetHashCode();
      hash ^= camouflages_.GetHashCode();
      hash ^= ancestors_.GetHashCode();
      hash ^= successors_.GetHashCode();
      hash ^= crew_.GetHashCode();
      if (HasHealth) hash ^= Health.GetHashCode();
      if (HasNation) hash ^= Nation.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (nameFull_ != null) hash ^= NameFull.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasMaxConsumables) hash ^= MaxConsumables.GetHashCode();
      if (HasMaxProvisions) hash ^= MaxProvisions.GetHashCode();
      if (HasTier) hash ^= Tier.GetHashCode();
      if (HasClass) hash ^= Class.GetHashCode();
      if (HasTesting) hash ^= Testing.GetHashCode();
      if (HasDeprecated) hash ^= Deprecated.GetHashCode();
      hash ^= turrets_.GetHashCode();
      hash ^= engines_.GetHashCode();
      hash ^= tracks_.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (researchCost_ != null) hash ^= ResearchCost.GetHashCode();
      if (HasSpeedForwards) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedForwards);
      if (HasSpeedBackwards) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedBackwards);
      if (HasCamouflageStill) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CamouflageStill);
      if (HasCamouflageMoving) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CamouflageMoving);
      if (HasCamouflageOnFire) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CamouflageOnFire);
      if (HasEquipmentPreset) hash ^= EquipmentPreset.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      roles_.WriteTo(output, _map_roles_codec);
      if (HasFixedCamouflage) {
        output.WriteRawTag(32);
        output.WriteBool(FixedCamouflage);
      }
      camouflages_.WriteTo(output, _repeated_camouflages_codec);
      ancestors_.WriteTo(output, _repeated_ancestors_codec);
      successors_.WriteTo(output, _repeated_successors_codec);
      crew_.WriteTo(output, _repeated_crew_codec);
      if (HasHealth) {
        output.WriteRawTag(72);
        output.WriteUInt32(Health);
      }
      if (HasNation) {
        output.WriteRawTag(82);
        output.WriteString(Nation);
      }
      if (name_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Name);
      }
      if (nameFull_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(NameFull);
      }
      if (HasType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Type);
      }
      if (HasMaxConsumables) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxConsumables);
      }
      if (HasMaxProvisions) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxProvisions);
      }
      if (HasTier) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Tier);
      }
      if (HasClass) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Class);
      }
      if (HasTesting) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Testing);
      }
      if (HasDeprecated) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Deprecated);
      }
      turrets_.WriteTo(output, _repeated_turrets_codec);
      engines_.WriteTo(output, _repeated_engines_codec);
      tracks_.WriteTo(output, _repeated_tracks_codec);
      if (price_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Price);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ResearchCost);
      }
      if (HasSpeedForwards) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(SpeedForwards);
      }
      if (HasSpeedBackwards) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(SpeedBackwards);
      }
      if (HasCamouflageStill) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(CamouflageStill);
      }
      if (HasCamouflageMoving) {
        output.WriteRawTag(229, 1);
        output.WriteFloat(CamouflageMoving);
      }
      if (HasCamouflageOnFire) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(CamouflageOnFire);
      }
      if (HasEquipmentPreset) {
        output.WriteRawTag(242, 1);
        output.WriteString(EquipmentPreset);
      }
      if (HasWeight) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      roles_.WriteTo(ref output, _map_roles_codec);
      if (HasFixedCamouflage) {
        output.WriteRawTag(32);
        output.WriteBool(FixedCamouflage);
      }
      camouflages_.WriteTo(ref output, _repeated_camouflages_codec);
      ancestors_.WriteTo(ref output, _repeated_ancestors_codec);
      successors_.WriteTo(ref output, _repeated_successors_codec);
      crew_.WriteTo(ref output, _repeated_crew_codec);
      if (HasHealth) {
        output.WriteRawTag(72);
        output.WriteUInt32(Health);
      }
      if (HasNation) {
        output.WriteRawTag(82);
        output.WriteString(Nation);
      }
      if (name_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Name);
      }
      if (nameFull_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(NameFull);
      }
      if (HasType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Type);
      }
      if (HasMaxConsumables) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxConsumables);
      }
      if (HasMaxProvisions) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxProvisions);
      }
      if (HasTier) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Tier);
      }
      if (HasClass) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Class);
      }
      if (HasTesting) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Testing);
      }
      if (HasDeprecated) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Deprecated);
      }
      turrets_.WriteTo(ref output, _repeated_turrets_codec);
      engines_.WriteTo(ref output, _repeated_engines_codec);
      tracks_.WriteTo(ref output, _repeated_tracks_codec);
      if (price_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Price);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ResearchCost);
      }
      if (HasSpeedForwards) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(SpeedForwards);
      }
      if (HasSpeedBackwards) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(SpeedBackwards);
      }
      if (HasCamouflageStill) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(CamouflageStill);
      }
      if (HasCamouflageMoving) {
        output.WriteRawTag(229, 1);
        output.WriteFloat(CamouflageMoving);
      }
      if (HasCamouflageOnFire) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(CamouflageOnFire);
      }
      if (HasEquipmentPreset) {
        output.WriteRawTag(242, 1);
        output.WriteString(EquipmentPreset);
      }
      if (HasWeight) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      size += roles_.CalculateSize(_map_roles_codec);
      if (HasFixedCamouflage) {
        size += 1 + 1;
      }
      size += camouflages_.CalculateSize(_repeated_camouflages_codec);
      size += ancestors_.CalculateSize(_repeated_ancestors_codec);
      size += successors_.CalculateSize(_repeated_successors_codec);
      size += crew_.CalculateSize(_repeated_crew_codec);
      if (HasHealth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Health);
      }
      if (HasNation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nation);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (nameFull_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NameFull);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasMaxConsumables) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxConsumables);
      }
      if (HasMaxProvisions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxProvisions);
      }
      if (HasTier) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Tier);
      }
      if (HasClass) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Class);
      }
      if (HasTesting) {
        size += 2 + 1;
      }
      if (HasDeprecated) {
        size += 2 + 1;
      }
      size += turrets_.CalculateSize(_repeated_turrets_codec);
      size += engines_.CalculateSize(_repeated_engines_codec);
      size += tracks_.CalculateSize(_repeated_tracks_codec);
      if (price_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (researchCost_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResearchCost);
      }
      if (HasSpeedForwards) {
        size += 2 + 4;
      }
      if (HasSpeedBackwards) {
        size += 2 + 4;
      }
      if (HasCamouflageStill) {
        size += 2 + 4;
      }
      if (HasCamouflageMoving) {
        size += 2 + 4;
      }
      if (HasCamouflageOnFire) {
        size += 2 + 4;
      }
      if (HasEquipmentPreset) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EquipmentPreset);
      }
      if (HasWeight) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TankDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      roles_.MergeFrom(other.roles_);
      if (other.HasFixedCamouflage) {
        FixedCamouflage = other.FixedCamouflage;
      }
      camouflages_.Add(other.camouflages_);
      ancestors_.Add(other.ancestors_);
      successors_.Add(other.successors_);
      crew_.Add(other.crew_);
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasNation) {
        Nation = other.Nation;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.nameFull_ != null) {
        if (nameFull_ == null) {
          NameFull = new global::Blitzkit.I18nString();
        }
        NameFull.MergeFrom(other.NameFull);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasMaxConsumables) {
        MaxConsumables = other.MaxConsumables;
      }
      if (other.HasMaxProvisions) {
        MaxProvisions = other.MaxProvisions;
      }
      if (other.HasTier) {
        Tier = other.Tier;
      }
      if (other.HasClass) {
        Class = other.Class;
      }
      if (other.HasTesting) {
        Testing = other.Testing;
      }
      if (other.HasDeprecated) {
        Deprecated = other.Deprecated;
      }
      turrets_.Add(other.turrets_);
      engines_.Add(other.engines_);
      tracks_.Add(other.tracks_);
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Blitzkit.TankPrice();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.researchCost_ != null) {
        if (researchCost_ == null) {
          ResearchCost = new global::Blitzkit.ResearchCost();
        }
        ResearchCost.MergeFrom(other.ResearchCost);
      }
      if (other.HasSpeedForwards) {
        SpeedForwards = other.SpeedForwards;
      }
      if (other.HasSpeedBackwards) {
        SpeedBackwards = other.SpeedBackwards;
      }
      if (other.HasCamouflageStill) {
        CamouflageStill = other.CamouflageStill;
      }
      if (other.HasCamouflageMoving) {
        CamouflageMoving = other.CamouflageMoving;
      }
      if (other.HasCamouflageOnFire) {
        CamouflageOnFire = other.CamouflageOnFire;
      }
      if (other.HasEquipmentPreset) {
        EquipmentPreset = other.EquipmentPreset;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(input, _map_roles_codec);
            break;
          }
          case 32: {
            FixedCamouflage = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            camouflages_.AddEntriesFrom(input, _repeated_camouflages_codec);
            break;
          }
          case 50:
          case 48: {
            ancestors_.AddEntriesFrom(input, _repeated_ancestors_codec);
            break;
          }
          case 58:
          case 56: {
            successors_.AddEntriesFrom(input, _repeated_successors_codec);
            break;
          }
          case 66: {
            crew_.AddEntriesFrom(input, _repeated_crew_codec);
            break;
          }
          case 72: {
            Health = input.ReadUInt32();
            break;
          }
          case 82: {
            Nation = input.ReadString();
            break;
          }
          case 90: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 98: {
            if (nameFull_ == null) {
              NameFull = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(NameFull);
            break;
          }
          case 104: {
            Type = (global::Blitzkit.TankType) input.ReadEnum();
            break;
          }
          case 112: {
            MaxConsumables = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxProvisions = input.ReadUInt32();
            break;
          }
          case 128: {
            Tier = input.ReadUInt32();
            break;
          }
          case 136: {
            Class = (global::Blitzkit.TankClass) input.ReadEnum();
            break;
          }
          case 144: {
            Testing = input.ReadBool();
            break;
          }
          case 152: {
            Deprecated = input.ReadBool();
            break;
          }
          case 162: {
            turrets_.AddEntriesFrom(input, _repeated_turrets_codec);
            break;
          }
          case 170: {
            engines_.AddEntriesFrom(input, _repeated_engines_codec);
            break;
          }
          case 178: {
            tracks_.AddEntriesFrom(input, _repeated_tracks_codec);
            break;
          }
          case 186: {
            if (price_ == null) {
              Price = new global::Blitzkit.TankPrice();
            }
            input.ReadMessage(Price);
            break;
          }
          case 194: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 205: {
            SpeedForwards = input.ReadFloat();
            break;
          }
          case 213: {
            SpeedBackwards = input.ReadFloat();
            break;
          }
          case 221: {
            CamouflageStill = input.ReadFloat();
            break;
          }
          case 229: {
            CamouflageMoving = input.ReadFloat();
            break;
          }
          case 237: {
            CamouflageOnFire = input.ReadFloat();
            break;
          }
          case 242: {
            EquipmentPreset = input.ReadString();
            break;
          }
          case 248: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(ref input, _map_roles_codec);
            break;
          }
          case 32: {
            FixedCamouflage = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            camouflages_.AddEntriesFrom(ref input, _repeated_camouflages_codec);
            break;
          }
          case 50:
          case 48: {
            ancestors_.AddEntriesFrom(ref input, _repeated_ancestors_codec);
            break;
          }
          case 58:
          case 56: {
            successors_.AddEntriesFrom(ref input, _repeated_successors_codec);
            break;
          }
          case 66: {
            crew_.AddEntriesFrom(ref input, _repeated_crew_codec);
            break;
          }
          case 72: {
            Health = input.ReadUInt32();
            break;
          }
          case 82: {
            Nation = input.ReadString();
            break;
          }
          case 90: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 98: {
            if (nameFull_ == null) {
              NameFull = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(NameFull);
            break;
          }
          case 104: {
            Type = (global::Blitzkit.TankType) input.ReadEnum();
            break;
          }
          case 112: {
            MaxConsumables = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxProvisions = input.ReadUInt32();
            break;
          }
          case 128: {
            Tier = input.ReadUInt32();
            break;
          }
          case 136: {
            Class = (global::Blitzkit.TankClass) input.ReadEnum();
            break;
          }
          case 144: {
            Testing = input.ReadBool();
            break;
          }
          case 152: {
            Deprecated = input.ReadBool();
            break;
          }
          case 162: {
            turrets_.AddEntriesFrom(ref input, _repeated_turrets_codec);
            break;
          }
          case 170: {
            engines_.AddEntriesFrom(ref input, _repeated_engines_codec);
            break;
          }
          case 178: {
            tracks_.AddEntriesFrom(ref input, _repeated_tracks_codec);
            break;
          }
          case 186: {
            if (price_ == null) {
              Price = new global::Blitzkit.TankPrice();
            }
            input.ReadMessage(Price);
            break;
          }
          case 194: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 205: {
            SpeedForwards = input.ReadFloat();
            break;
          }
          case 213: {
            SpeedBackwards = input.ReadFloat();
            break;
          }
          case 221: {
            CamouflageStill = input.ReadFloat();
            break;
          }
          case 229: {
            CamouflageMoving = input.ReadFloat();
            break;
          }
          case 237: {
            CamouflageOnFire = input.ReadFloat();
            break;
          }
          case 242: {
            EquipmentPreset = input.ReadString();
            break;
          }
          case 248: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResearchCost : pb::IMessage<ResearchCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResearchCost> _parser = new pb::MessageParser<ResearchCost>(() => new ResearchCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResearchCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCost(ResearchCost other) : this() {
      switch (other.ResearchCostTypeCase) {
        case ResearchCostTypeOneofCase.Xp:
          Xp = other.Xp;
          break;
        case ResearchCostTypeOneofCase.SeasonalTokens:
          SeasonalTokens = other.SeasonalTokens.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCost Clone() {
      return new ResearchCost(this);
    }

    /// <summary>Field number for the "xp" field.</summary>
    public const int XpFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Xp {
      get { return HasXp ? (uint) researchCostType_ : 0; }
      set {
        researchCostType_ = value;
        researchCostTypeCase_ = ResearchCostTypeOneofCase.Xp;
      }
    }
    /// <summary>Gets whether the "xp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXp {
      get { return researchCostTypeCase_ == ResearchCostTypeOneofCase.Xp; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "xp" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXp() {
      if (HasXp) {
        ClearResearchCostType();
      }
    }

    /// <summary>Field number for the "seasonal_tokens" field.</summary>
    public const int SeasonalTokensFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCostSeasonalTokens SeasonalTokens {
      get { return researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens ? (global::Blitzkit.ResearchCostSeasonalTokens) researchCostType_ : null; }
      set {
        researchCostType_ = value;
        researchCostTypeCase_ = value == null ? ResearchCostTypeOneofCase.None : ResearchCostTypeOneofCase.SeasonalTokens;
      }
    }

    private object researchCostType_;
    /// <summary>Enum of possible cases for the "research_cost_type" oneof.</summary>
    public enum ResearchCostTypeOneofCase {
      None = 0,
      Xp = 1,
      SeasonalTokens = 2,
    }
    private ResearchCostTypeOneofCase researchCostTypeCase_ = ResearchCostTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCostTypeOneofCase ResearchCostTypeCase {
      get { return researchCostTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResearchCostType() {
      researchCostTypeCase_ = ResearchCostTypeOneofCase.None;
      researchCostType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResearchCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResearchCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Xp != other.Xp) return false;
      if (!object.Equals(SeasonalTokens, other.SeasonalTokens)) return false;
      if (ResearchCostTypeCase != other.ResearchCostTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasXp) hash ^= Xp.GetHashCode();
      if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) hash ^= SeasonalTokens.GetHashCode();
      hash ^= (int) researchCostTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasXp) {
        output.WriteRawTag(8);
        output.WriteUInt32(Xp);
      }
      if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) {
        output.WriteRawTag(18);
        output.WriteMessage(SeasonalTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasXp) {
        output.WriteRawTag(8);
        output.WriteUInt32(Xp);
      }
      if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) {
        output.WriteRawTag(18);
        output.WriteMessage(SeasonalTokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasXp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Xp);
      }
      if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeasonalTokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResearchCost other) {
      if (other == null) {
        return;
      }
      switch (other.ResearchCostTypeCase) {
        case ResearchCostTypeOneofCase.Xp:
          Xp = other.Xp;
          break;
        case ResearchCostTypeOneofCase.SeasonalTokens:
          if (SeasonalTokens == null) {
            SeasonalTokens = new global::Blitzkit.ResearchCostSeasonalTokens();
          }
          SeasonalTokens.MergeFrom(other.SeasonalTokens);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Xp = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Blitzkit.ResearchCostSeasonalTokens subBuilder = new global::Blitzkit.ResearchCostSeasonalTokens();
            if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) {
              subBuilder.MergeFrom(SeasonalTokens);
            }
            input.ReadMessage(subBuilder);
            SeasonalTokens = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Xp = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Blitzkit.ResearchCostSeasonalTokens subBuilder = new global::Blitzkit.ResearchCostSeasonalTokens();
            if (researchCostTypeCase_ == ResearchCostTypeOneofCase.SeasonalTokens) {
              subBuilder.MergeFrom(SeasonalTokens);
            }
            input.ReadMessage(subBuilder);
            SeasonalTokens = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResearchCostSeasonalTokens : pb::IMessage<ResearchCostSeasonalTokens>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResearchCostSeasonalTokens> _parser = new pb::MessageParser<ResearchCostSeasonalTokens>(() => new ResearchCostSeasonalTokens());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResearchCostSeasonalTokens> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCostSeasonalTokens() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCostSeasonalTokens(ResearchCostSeasonalTokens other) : this() {
      _hasBits0 = other._hasBits0;
      season_ = other.season_;
      tokens_ = other.tokens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResearchCostSeasonalTokens Clone() {
      return new ResearchCostSeasonalTokens(this);
    }

    /// <summary>Field number for the "season" field.</summary>
    public const int SeasonFieldNumber = 1;
    private readonly static uint SeasonDefaultValue = 0;

    private uint season_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Season {
      get { if ((_hasBits0 & 1) != 0) { return season_; } else { return SeasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        season_ = value;
      }
    }
    /// <summary>Gets whether the "season" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "season" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tokens" field.</summary>
    public const int TokensFieldNumber = 2;
    private readonly static uint TokensDefaultValue = 0;

    private uint tokens_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tokens {
      get { if ((_hasBits0 & 2) != 0) { return tokens_; } else { return TokensDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tokens_ = value;
      }
    }
    /// <summary>Gets whether the "tokens" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTokens {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tokens" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTokens() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResearchCostSeasonalTokens);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResearchCostSeasonalTokens other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Season != other.Season) return false;
      if (Tokens != other.Tokens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeason) hash ^= Season.GetHashCode();
      if (HasTokens) hash ^= Tokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeason) {
        output.WriteRawTag(8);
        output.WriteUInt32(Season);
      }
      if (HasTokens) {
        output.WriteRawTag(16);
        output.WriteUInt32(Tokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeason) {
        output.WriteRawTag(8);
        output.WriteUInt32(Season);
      }
      if (HasTokens) {
        output.WriteRawTag(16);
        output.WriteUInt32(Tokens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeason) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Season);
      }
      if (HasTokens) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tokens);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResearchCostSeasonalTokens other) {
      if (other == null) {
        return;
      }
      if (other.HasSeason) {
        Season = other.Season;
      }
      if (other.HasTokens) {
        Tokens = other.Tokens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Season = input.ReadUInt32();
            break;
          }
          case 16: {
            Tokens = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Season = input.ReadUInt32();
            break;
          }
          case 16: {
            Tokens = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TankPrice : pb::IMessage<TankPrice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TankPrice> _parser = new pb::MessageParser<TankPrice>(() => new TankPrice());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TankPrice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankPrice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankPrice(TankPrice other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankPrice Clone() {
      return new TankPrice(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Blitzkit.TankPriceType TypeDefaultValue = global::Blitzkit.TankPriceType.Credits;

    private global::Blitzkit.TankPriceType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.TankPriceType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static uint ValueDefaultValue = 0;

    private uint value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Value {
      get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TankPrice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TankPrice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TankPrice other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Blitzkit.TankPriceType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Blitzkit.TankPriceType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TrackDefinition : pb::IMessage<TrackDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackDefinition> _parser = new pb::MessageParser<TrackDefinition>(() => new TrackDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDefinition(TrackDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      tier_ = other.tier_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      weight_ = other.weight_;
      traverseSpeed_ = other.traverseSpeed_;
      researchCost_ = other.researchCost_ != null ? other.researchCost_.Clone() : null;
      dispersionMove_ = other.dispersionMove_;
      dispersionTraverse_ = other.dispersionTraverse_;
      resistanceHard_ = other.resistanceHard_;
      resistanceMedium_ = other.resistanceMedium_;
      resistanceSoft_ = other.resistanceSoft_;
      unlocks_ = other.unlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDefinition Clone() {
      return new TrackDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 2;
    private readonly static uint TierDefaultValue = 0;

    private uint tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tier {
      get { if ((_hasBits0 & 2) != 0) { return tier_; } else { return TierDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tier_ = value;
      }
    }
    /// <summary>Gets whether the "tier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTier {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTier() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private readonly static uint WeightDefaultValue = 0;

    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Weight {
      get { if ((_hasBits0 & 4) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "traverse_speed" field.</summary>
    public const int TraverseSpeedFieldNumber = 5;
    private readonly static float TraverseSpeedDefaultValue = 0F;

    private float traverseSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TraverseSpeed {
      get { if ((_hasBits0 & 8) != 0) { return traverseSpeed_; } else { return TraverseSpeedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        traverseSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "traverse_speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTraverseSpeed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "traverse_speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTraverseSpeed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "research_cost" field.</summary>
    public const int ResearchCostFieldNumber = 6;
    private global::Blitzkit.ResearchCost researchCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCost ResearchCost {
      get { return researchCost_; }
      set {
        researchCost_ = value;
      }
    }

    /// <summary>Field number for the "dispersion_move" field.</summary>
    public const int DispersionMoveFieldNumber = 7;
    private readonly static float DispersionMoveDefaultValue = 0F;

    private float dispersionMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionMove {
      get { if ((_hasBits0 & 16) != 0) { return dispersionMove_; } else { return DispersionMoveDefaultValue; } }
      set {
        _hasBits0 |= 16;
        dispersionMove_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_move" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionMove {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_move" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionMove() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "dispersion_traverse" field.</summary>
    public const int DispersionTraverseFieldNumber = 8;
    private readonly static float DispersionTraverseDefaultValue = 0F;

    private float dispersionTraverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionTraverse {
      get { if ((_hasBits0 & 32) != 0) { return dispersionTraverse_; } else { return DispersionTraverseDefaultValue; } }
      set {
        _hasBits0 |= 32;
        dispersionTraverse_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_traverse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionTraverse {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_traverse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionTraverse() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "resistance_hard" field.</summary>
    public const int ResistanceHardFieldNumber = 9;
    private readonly static float ResistanceHardDefaultValue = 0F;

    private float resistanceHard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ResistanceHard {
      get { if ((_hasBits0 & 64) != 0) { return resistanceHard_; } else { return ResistanceHardDefaultValue; } }
      set {
        _hasBits0 |= 64;
        resistanceHard_ = value;
      }
    }
    /// <summary>Gets whether the "resistance_hard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResistanceHard {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "resistance_hard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResistanceHard() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "resistance_medium" field.</summary>
    public const int ResistanceMediumFieldNumber = 10;
    private readonly static float ResistanceMediumDefaultValue = 0F;

    private float resistanceMedium_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ResistanceMedium {
      get { if ((_hasBits0 & 128) != 0) { return resistanceMedium_; } else { return ResistanceMediumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        resistanceMedium_ = value;
      }
    }
    /// <summary>Gets whether the "resistance_medium" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResistanceMedium {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "resistance_medium" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResistanceMedium() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "resistance_soft" field.</summary>
    public const int ResistanceSoftFieldNumber = 11;
    private readonly static float ResistanceSoftDefaultValue = 0F;

    private float resistanceSoft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ResistanceSoft {
      get { if ((_hasBits0 & 256) != 0) { return resistanceSoft_; } else { return ResistanceSoftDefaultValue; } }
      set {
        _hasBits0 |= 256;
        resistanceSoft_ = value;
      }
    }
    /// <summary>Gets whether the "resistance_soft" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResistanceSoft {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "resistance_soft" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResistanceSoft() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "unlocks" field.</summary>
    public const int UnlocksFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Blitzkit.Unlock> _repeated_unlocks_codec
        = pb::FieldCodec.ForMessage(98, global::Blitzkit.Unlock.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.Unlock> unlocks_ = new pbc::RepeatedField<global::Blitzkit.Unlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.Unlock> Unlocks {
      get { return unlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Tier != other.Tier) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (Weight != other.Weight) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TraverseSpeed, other.TraverseSpeed)) return false;
      if (!object.Equals(ResearchCost, other.ResearchCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionMove, other.DispersionMove)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionTraverse, other.DispersionTraverse)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ResistanceHard, other.ResistanceHard)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ResistanceMedium, other.ResistanceMedium)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ResistanceSoft, other.ResistanceSoft)) return false;
      if(!unlocks_.Equals(other.unlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasTier) hash ^= Tier.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      if (HasTraverseSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TraverseSpeed);
      if (researchCost_ != null) hash ^= ResearchCost.GetHashCode();
      if (HasDispersionMove) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionMove);
      if (HasDispersionTraverse) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionTraverse);
      if (HasResistanceHard) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ResistanceHard);
      if (HasResistanceMedium) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ResistanceMedium);
      if (HasResistanceSoft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ResistanceSoft);
      hash ^= unlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasTier) {
        output.WriteRawTag(16);
        output.WriteUInt32(Tier);
      }
      if (name_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Name);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Weight);
      }
      if (HasTraverseSpeed) {
        output.WriteRawTag(45);
        output.WriteFloat(TraverseSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResearchCost);
      }
      if (HasDispersionMove) {
        output.WriteRawTag(61);
        output.WriteFloat(DispersionMove);
      }
      if (HasDispersionTraverse) {
        output.WriteRawTag(69);
        output.WriteFloat(DispersionTraverse);
      }
      if (HasResistanceHard) {
        output.WriteRawTag(77);
        output.WriteFloat(ResistanceHard);
      }
      if (HasResistanceMedium) {
        output.WriteRawTag(85);
        output.WriteFloat(ResistanceMedium);
      }
      if (HasResistanceSoft) {
        output.WriteRawTag(93);
        output.WriteFloat(ResistanceSoft);
      }
      unlocks_.WriteTo(output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasTier) {
        output.WriteRawTag(16);
        output.WriteUInt32(Tier);
      }
      if (name_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Name);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Weight);
      }
      if (HasTraverseSpeed) {
        output.WriteRawTag(45);
        output.WriteFloat(TraverseSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResearchCost);
      }
      if (HasDispersionMove) {
        output.WriteRawTag(61);
        output.WriteFloat(DispersionMove);
      }
      if (HasDispersionTraverse) {
        output.WriteRawTag(69);
        output.WriteFloat(DispersionTraverse);
      }
      if (HasResistanceHard) {
        output.WriteRawTag(77);
        output.WriteFloat(ResistanceHard);
      }
      if (HasResistanceMedium) {
        output.WriteRawTag(85);
        output.WriteFloat(ResistanceMedium);
      }
      if (HasResistanceSoft) {
        output.WriteRawTag(93);
        output.WriteFloat(ResistanceSoft);
      }
      unlocks_.WriteTo(ref output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasTier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tier);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (HasWeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (HasTraverseSpeed) {
        size += 1 + 4;
      }
      if (researchCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResearchCost);
      }
      if (HasDispersionMove) {
        size += 1 + 4;
      }
      if (HasDispersionTraverse) {
        size += 1 + 4;
      }
      if (HasResistanceHard) {
        size += 1 + 4;
      }
      if (HasResistanceMedium) {
        size += 1 + 4;
      }
      if (HasResistanceSoft) {
        size += 1 + 4;
      }
      size += unlocks_.CalculateSize(_repeated_unlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasTier) {
        Tier = other.Tier;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      if (other.HasTraverseSpeed) {
        TraverseSpeed = other.TraverseSpeed;
      }
      if (other.researchCost_ != null) {
        if (researchCost_ == null) {
          ResearchCost = new global::Blitzkit.ResearchCost();
        }
        ResearchCost.MergeFrom(other.ResearchCost);
      }
      if (other.HasDispersionMove) {
        DispersionMove = other.DispersionMove;
      }
      if (other.HasDispersionTraverse) {
        DispersionTraverse = other.DispersionTraverse;
      }
      if (other.HasResistanceHard) {
        ResistanceHard = other.ResistanceHard;
      }
      if (other.HasResistanceMedium) {
        ResistanceMedium = other.ResistanceMedium;
      }
      if (other.HasResistanceSoft) {
        ResistanceSoft = other.ResistanceSoft;
      }
      unlocks_.Add(other.unlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Tier = input.ReadUInt32();
            break;
          }
          case 26: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 32: {
            Weight = input.ReadUInt32();
            break;
          }
          case 45: {
            TraverseSpeed = input.ReadFloat();
            break;
          }
          case 50: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 61: {
            DispersionMove = input.ReadFloat();
            break;
          }
          case 69: {
            DispersionTraverse = input.ReadFloat();
            break;
          }
          case 77: {
            ResistanceHard = input.ReadFloat();
            break;
          }
          case 85: {
            ResistanceMedium = input.ReadFloat();
            break;
          }
          case 93: {
            ResistanceSoft = input.ReadFloat();
            break;
          }
          case 98: {
            unlocks_.AddEntriesFrom(input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Tier = input.ReadUInt32();
            break;
          }
          case 26: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 32: {
            Weight = input.ReadUInt32();
            break;
          }
          case 45: {
            TraverseSpeed = input.ReadFloat();
            break;
          }
          case 50: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 61: {
            DispersionMove = input.ReadFloat();
            break;
          }
          case 69: {
            DispersionTraverse = input.ReadFloat();
            break;
          }
          case 77: {
            ResistanceHard = input.ReadFloat();
            break;
          }
          case 85: {
            ResistanceMedium = input.ReadFloat();
            break;
          }
          case 93: {
            ResistanceSoft = input.ReadFloat();
            break;
          }
          case 98: {
            unlocks_.AddEntriesFrom(ref input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EngineDefinition : pb::IMessage<EngineDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EngineDefinition> _parser = new pb::MessageParser<EngineDefinition>(() => new EngineDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EngineDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EngineDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EngineDefinition(EngineDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      researchCost_ = other.researchCost_ != null ? other.researchCost_.Clone() : null;
      tier_ = other.tier_;
      fireChance_ = other.fireChance_;
      power_ = other.power_;
      weight_ = other.weight_;
      unlocks_ = other.unlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EngineDefinition Clone() {
      return new EngineDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "research_cost" field.</summary>
    public const int ResearchCostFieldNumber = 3;
    private global::Blitzkit.ResearchCost researchCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCost ResearchCost {
      get { return researchCost_; }
      set {
        researchCost_ = value;
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 4;
    private readonly static uint TierDefaultValue = 0;

    private uint tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tier {
      get { if ((_hasBits0 & 2) != 0) { return tier_; } else { return TierDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tier_ = value;
      }
    }
    /// <summary>Gets whether the "tier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTier {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTier() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fire_chance" field.</summary>
    public const int FireChanceFieldNumber = 5;
    private readonly static float FireChanceDefaultValue = 0F;

    private float fireChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FireChance {
      get { if ((_hasBits0 & 4) != 0) { return fireChance_; } else { return FireChanceDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fireChance_ = value;
      }
    }
    /// <summary>Gets whether the "fire_chance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFireChance {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fire_chance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFireChance() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 6;
    private readonly static uint PowerDefaultValue = 0;

    private uint power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Power {
      get { if ((_hasBits0 & 8) != 0) { return power_; } else { return PowerDefaultValue; } }
      set {
        _hasBits0 |= 8;
        power_ = value;
      }
    }
    /// <summary>Gets whether the "power" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPower {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "power" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPower() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 7;
    private readonly static uint WeightDefaultValue = 0;

    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Weight {
      get { if ((_hasBits0 & 16) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 16;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "unlocks" field.</summary>
    public const int UnlocksFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Blitzkit.Unlock> _repeated_unlocks_codec
        = pb::FieldCodec.ForMessage(66, global::Blitzkit.Unlock.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.Unlock> unlocks_ = new pbc::RepeatedField<global::Blitzkit.Unlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.Unlock> Unlocks {
      get { return unlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EngineDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EngineDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(ResearchCost, other.ResearchCost)) return false;
      if (Tier != other.Tier) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FireChance, other.FireChance)) return false;
      if (Power != other.Power) return false;
      if (Weight != other.Weight) return false;
      if(!unlocks_.Equals(other.unlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (researchCost_ != null) hash ^= ResearchCost.GetHashCode();
      if (HasTier) hash ^= Tier.GetHashCode();
      if (HasFireChance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FireChance);
      if (HasPower) hash ^= Power.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      hash ^= unlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResearchCost);
      }
      if (HasTier) {
        output.WriteRawTag(32);
        output.WriteUInt32(Tier);
      }
      if (HasFireChance) {
        output.WriteRawTag(45);
        output.WriteFloat(FireChance);
      }
      if (HasPower) {
        output.WriteRawTag(48);
        output.WriteUInt32(Power);
      }
      if (HasWeight) {
        output.WriteRawTag(56);
        output.WriteUInt32(Weight);
      }
      unlocks_.WriteTo(output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResearchCost);
      }
      if (HasTier) {
        output.WriteRawTag(32);
        output.WriteUInt32(Tier);
      }
      if (HasFireChance) {
        output.WriteRawTag(45);
        output.WriteFloat(FireChance);
      }
      if (HasPower) {
        output.WriteRawTag(48);
        output.WriteUInt32(Power);
      }
      if (HasWeight) {
        output.WriteRawTag(56);
        output.WriteUInt32(Weight);
      }
      unlocks_.WriteTo(ref output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (researchCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResearchCost);
      }
      if (HasTier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tier);
      }
      if (HasFireChance) {
        size += 1 + 4;
      }
      if (HasPower) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Power);
      }
      if (HasWeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      size += unlocks_.CalculateSize(_repeated_unlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EngineDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.researchCost_ != null) {
        if (researchCost_ == null) {
          ResearchCost = new global::Blitzkit.ResearchCost();
        }
        ResearchCost.MergeFrom(other.ResearchCost);
      }
      if (other.HasTier) {
        Tier = other.Tier;
      }
      if (other.HasFireChance) {
        FireChance = other.FireChance;
      }
      if (other.HasPower) {
        Power = other.Power;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      unlocks_.Add(other.unlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 26: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 32: {
            Tier = input.ReadUInt32();
            break;
          }
          case 45: {
            FireChance = input.ReadFloat();
            break;
          }
          case 48: {
            Power = input.ReadUInt32();
            break;
          }
          case 56: {
            Weight = input.ReadUInt32();
            break;
          }
          case 66: {
            unlocks_.AddEntriesFrom(input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 26: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 32: {
            Tier = input.ReadUInt32();
            break;
          }
          case 45: {
            FireChance = input.ReadFloat();
            break;
          }
          case 48: {
            Power = input.ReadUInt32();
            break;
          }
          case 56: {
            Weight = input.ReadUInt32();
            break;
          }
          case 66: {
            unlocks_.AddEntriesFrom(ref input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TurretDefinition : pb::IMessage<TurretDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TurretDefinition> _parser = new pb::MessageParser<TurretDefinition>(() => new TurretDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TurretDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TurretDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TurretDefinition(TurretDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      health_ = other.health_;
      viewRange_ = other.viewRange_;
      traverseSpeed_ = other.traverseSpeed_;
      researchCost_ = other.researchCost_ != null ? other.researchCost_.Clone() : null;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      tier_ = other.tier_;
      weight_ = other.weight_;
      guns_ = other.guns_.Clone();
      unlocks_ = other.unlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TurretDefinition Clone() {
      return new TurretDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 2;
    private readonly static uint HealthDefaultValue = 0;

    private uint health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Health {
      get { if ((_hasBits0 & 2) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "view_range" field.</summary>
    public const int ViewRangeFieldNumber = 3;
    private readonly static uint ViewRangeDefaultValue = 0;

    private uint viewRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ViewRange {
      get { if ((_hasBits0 & 4) != 0) { return viewRange_; } else { return ViewRangeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        viewRange_ = value;
      }
    }
    /// <summary>Gets whether the "view_range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewRange {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "view_range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewRange() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "traverse_speed" field.</summary>
    public const int TraverseSpeedFieldNumber = 4;
    private readonly static float TraverseSpeedDefaultValue = 0F;

    private float traverseSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TraverseSpeed {
      get { if ((_hasBits0 & 8) != 0) { return traverseSpeed_; } else { return TraverseSpeedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        traverseSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "traverse_speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTraverseSpeed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "traverse_speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTraverseSpeed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "research_cost" field.</summary>
    public const int ResearchCostFieldNumber = 5;
    private global::Blitzkit.ResearchCost researchCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCost ResearchCost {
      get { return researchCost_; }
      set {
        researchCost_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 7;
    private readonly static uint TierDefaultValue = 0;

    private uint tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tier {
      get { if ((_hasBits0 & 16) != 0) { return tier_; } else { return TierDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tier_ = value;
      }
    }
    /// <summary>Gets whether the "tier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTier {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTier() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 8;
    private readonly static uint WeightDefaultValue = 0;

    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Weight {
      get { if ((_hasBits0 & 32) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 32;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "guns" field.</summary>
    public const int GunsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Blitzkit.GunDefinition> _repeated_guns_codec
        = pb::FieldCodec.ForMessage(74, global::Blitzkit.GunDefinition.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.GunDefinition> guns_ = new pbc::RepeatedField<global::Blitzkit.GunDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.GunDefinition> Guns {
      get { return guns_; }
    }

    /// <summary>Field number for the "unlocks" field.</summary>
    public const int UnlocksFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Blitzkit.Unlock> _repeated_unlocks_codec
        = pb::FieldCodec.ForMessage(82, global::Blitzkit.Unlock.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.Unlock> unlocks_ = new pbc::RepeatedField<global::Blitzkit.Unlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.Unlock> Unlocks {
      get { return unlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TurretDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TurretDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Health != other.Health) return false;
      if (ViewRange != other.ViewRange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TraverseSpeed, other.TraverseSpeed)) return false;
      if (!object.Equals(ResearchCost, other.ResearchCost)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (Tier != other.Tier) return false;
      if (Weight != other.Weight) return false;
      if(!guns_.Equals(other.guns_)) return false;
      if(!unlocks_.Equals(other.unlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasHealth) hash ^= Health.GetHashCode();
      if (HasViewRange) hash ^= ViewRange.GetHashCode();
      if (HasTraverseSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TraverseSpeed);
      if (researchCost_ != null) hash ^= ResearchCost.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (HasTier) hash ^= Tier.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      hash ^= guns_.GetHashCode();
      hash ^= unlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasHealth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Health);
      }
      if (HasViewRange) {
        output.WriteRawTag(24);
        output.WriteUInt32(ViewRange);
      }
      if (HasTraverseSpeed) {
        output.WriteRawTag(37);
        output.WriteFloat(TraverseSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResearchCost);
      }
      if (name_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Name);
      }
      if (HasTier) {
        output.WriteRawTag(56);
        output.WriteUInt32(Tier);
      }
      if (HasWeight) {
        output.WriteRawTag(64);
        output.WriteUInt32(Weight);
      }
      guns_.WriteTo(output, _repeated_guns_codec);
      unlocks_.WriteTo(output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasHealth) {
        output.WriteRawTag(16);
        output.WriteUInt32(Health);
      }
      if (HasViewRange) {
        output.WriteRawTag(24);
        output.WriteUInt32(ViewRange);
      }
      if (HasTraverseSpeed) {
        output.WriteRawTag(37);
        output.WriteFloat(TraverseSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResearchCost);
      }
      if (name_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Name);
      }
      if (HasTier) {
        output.WriteRawTag(56);
        output.WriteUInt32(Tier);
      }
      if (HasWeight) {
        output.WriteRawTag(64);
        output.WriteUInt32(Weight);
      }
      guns_.WriteTo(ref output, _repeated_guns_codec);
      unlocks_.WriteTo(ref output, _repeated_unlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasHealth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Health);
      }
      if (HasViewRange) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewRange);
      }
      if (HasTraverseSpeed) {
        size += 1 + 4;
      }
      if (researchCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResearchCost);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (HasTier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tier);
      }
      if (HasWeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      size += guns_.CalculateSize(_repeated_guns_codec);
      size += unlocks_.CalculateSize(_repeated_unlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TurretDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasViewRange) {
        ViewRange = other.ViewRange;
      }
      if (other.HasTraverseSpeed) {
        TraverseSpeed = other.TraverseSpeed;
      }
      if (other.researchCost_ != null) {
        if (researchCost_ == null) {
          ResearchCost = new global::Blitzkit.ResearchCost();
        }
        ResearchCost.MergeFrom(other.ResearchCost);
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.HasTier) {
        Tier = other.Tier;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      guns_.Add(other.guns_);
      unlocks_.Add(other.unlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Health = input.ReadUInt32();
            break;
          }
          case 24: {
            ViewRange = input.ReadUInt32();
            break;
          }
          case 37: {
            TraverseSpeed = input.ReadFloat();
            break;
          }
          case 42: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 50: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 56: {
            Tier = input.ReadUInt32();
            break;
          }
          case 64: {
            Weight = input.ReadUInt32();
            break;
          }
          case 74: {
            guns_.AddEntriesFrom(input, _repeated_guns_codec);
            break;
          }
          case 82: {
            unlocks_.AddEntriesFrom(input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Health = input.ReadUInt32();
            break;
          }
          case 24: {
            ViewRange = input.ReadUInt32();
            break;
          }
          case 37: {
            TraverseSpeed = input.ReadFloat();
            break;
          }
          case 42: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 50: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 56: {
            Tier = input.ReadUInt32();
            break;
          }
          case 64: {
            Weight = input.ReadUInt32();
            break;
          }
          case 74: {
            guns_.AddEntriesFrom(ref input, _repeated_guns_codec);
            break;
          }
          case 82: {
            unlocks_.AddEntriesFrom(ref input, _repeated_unlocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinition : pb::IMessage<GunDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinition> _parser = new pb::MessageParser<GunDefinition>(() => new GunDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinition(GunDefinition other) : this() {
      switch (other.GunTypeCase) {
        case GunTypeOneofCase.Regular:
          Regular = other.Regular.Clone();
          break;
        case GunTypeOneofCase.AutoLoader:
          AutoLoader = other.AutoLoader.Clone();
          break;
        case GunTypeOneofCase.AutoReloader:
          AutoReloader = other.AutoReloader.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinition Clone() {
      return new GunDefinition(this);
    }

    /// <summary>Field number for the "regular" field.</summary>
    public const int RegularFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionRegular Regular {
      get { return gunTypeCase_ == GunTypeOneofCase.Regular ? (global::Blitzkit.GunDefinitionRegular) gunType_ : null; }
      set {
        gunType_ = value;
        gunTypeCase_ = value == null ? GunTypeOneofCase.None : GunTypeOneofCase.Regular;
      }
    }

    /// <summary>Field number for the "auto_loader" field.</summary>
    public const int AutoLoaderFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionAutoLoader AutoLoader {
      get { return gunTypeCase_ == GunTypeOneofCase.AutoLoader ? (global::Blitzkit.GunDefinitionAutoLoader) gunType_ : null; }
      set {
        gunType_ = value;
        gunTypeCase_ = value == null ? GunTypeOneofCase.None : GunTypeOneofCase.AutoLoader;
      }
    }

    /// <summary>Field number for the "auto_reloader" field.</summary>
    public const int AutoReloaderFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionAutoReloader AutoReloader {
      get { return gunTypeCase_ == GunTypeOneofCase.AutoReloader ? (global::Blitzkit.GunDefinitionAutoReloader) gunType_ : null; }
      set {
        gunType_ = value;
        gunTypeCase_ = value == null ? GunTypeOneofCase.None : GunTypeOneofCase.AutoReloader;
      }
    }

    private object gunType_;
    /// <summary>Enum of possible cases for the "gun_type" oneof.</summary>
    public enum GunTypeOneofCase {
      None = 0,
      Regular = 1,
      AutoLoader = 2,
      AutoReloader = 3,
    }
    private GunTypeOneofCase gunTypeCase_ = GunTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunTypeOneofCase GunTypeCase {
      get { return gunTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGunType() {
      gunTypeCase_ = GunTypeOneofCase.None;
      gunType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Regular, other.Regular)) return false;
      if (!object.Equals(AutoLoader, other.AutoLoader)) return false;
      if (!object.Equals(AutoReloader, other.AutoReloader)) return false;
      if (GunTypeCase != other.GunTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gunTypeCase_ == GunTypeOneofCase.Regular) hash ^= Regular.GetHashCode();
      if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) hash ^= AutoLoader.GetHashCode();
      if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) hash ^= AutoReloader.GetHashCode();
      hash ^= (int) gunTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gunTypeCase_ == GunTypeOneofCase.Regular) {
        output.WriteRawTag(10);
        output.WriteMessage(Regular);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) {
        output.WriteRawTag(18);
        output.WriteMessage(AutoLoader);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) {
        output.WriteRawTag(26);
        output.WriteMessage(AutoReloader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gunTypeCase_ == GunTypeOneofCase.Regular) {
        output.WriteRawTag(10);
        output.WriteMessage(Regular);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) {
        output.WriteRawTag(18);
        output.WriteMessage(AutoLoader);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) {
        output.WriteRawTag(26);
        output.WriteMessage(AutoReloader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gunTypeCase_ == GunTypeOneofCase.Regular) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Regular);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoLoader);
      }
      if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoReloader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinition other) {
      if (other == null) {
        return;
      }
      switch (other.GunTypeCase) {
        case GunTypeOneofCase.Regular:
          if (Regular == null) {
            Regular = new global::Blitzkit.GunDefinitionRegular();
          }
          Regular.MergeFrom(other.Regular);
          break;
        case GunTypeOneofCase.AutoLoader:
          if (AutoLoader == null) {
            AutoLoader = new global::Blitzkit.GunDefinitionAutoLoader();
          }
          AutoLoader.MergeFrom(other.AutoLoader);
          break;
        case GunTypeOneofCase.AutoReloader:
          if (AutoReloader == null) {
            AutoReloader = new global::Blitzkit.GunDefinitionAutoReloader();
          }
          AutoReloader.MergeFrom(other.AutoReloader);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Blitzkit.GunDefinitionRegular subBuilder = new global::Blitzkit.GunDefinitionRegular();
            if (gunTypeCase_ == GunTypeOneofCase.Regular) {
              subBuilder.MergeFrom(Regular);
            }
            input.ReadMessage(subBuilder);
            Regular = subBuilder;
            break;
          }
          case 18: {
            global::Blitzkit.GunDefinitionAutoLoader subBuilder = new global::Blitzkit.GunDefinitionAutoLoader();
            if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) {
              subBuilder.MergeFrom(AutoLoader);
            }
            input.ReadMessage(subBuilder);
            AutoLoader = subBuilder;
            break;
          }
          case 26: {
            global::Blitzkit.GunDefinitionAutoReloader subBuilder = new global::Blitzkit.GunDefinitionAutoReloader();
            if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) {
              subBuilder.MergeFrom(AutoReloader);
            }
            input.ReadMessage(subBuilder);
            AutoReloader = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Blitzkit.GunDefinitionRegular subBuilder = new global::Blitzkit.GunDefinitionRegular();
            if (gunTypeCase_ == GunTypeOneofCase.Regular) {
              subBuilder.MergeFrom(Regular);
            }
            input.ReadMessage(subBuilder);
            Regular = subBuilder;
            break;
          }
          case 18: {
            global::Blitzkit.GunDefinitionAutoLoader subBuilder = new global::Blitzkit.GunDefinitionAutoLoader();
            if (gunTypeCase_ == GunTypeOneofCase.AutoLoader) {
              subBuilder.MergeFrom(AutoLoader);
            }
            input.ReadMessage(subBuilder);
            AutoLoader = subBuilder;
            break;
          }
          case 26: {
            global::Blitzkit.GunDefinitionAutoReloader subBuilder = new global::Blitzkit.GunDefinitionAutoReloader();
            if (gunTypeCase_ == GunTypeOneofCase.AutoReloader) {
              subBuilder.MergeFrom(AutoReloader);
            }
            input.ReadMessage(subBuilder);
            AutoReloader = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionRegular : pb::IMessage<GunDefinitionRegular>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionRegular> _parser = new pb::MessageParser<GunDefinitionRegular>(() => new GunDefinitionRegular());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionRegular> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegular() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegular(GunDefinitionRegular other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      extension_ = other.extension_ != null ? other.extension_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegular Clone() {
      return new GunDefinitionRegular(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Blitzkit.GunDefinitionBase base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionBase Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 2;
    private global::Blitzkit.GunDefinitionRegularProperties extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionRegularProperties Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionRegular);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionRegular other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (extension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionRegular other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Blitzkit.GunDefinitionBase();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.extension_ != null) {
        if (extension_ == null) {
          Extension = new global::Blitzkit.GunDefinitionRegularProperties();
        }
        Extension.MergeFrom(other.Extension);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionRegularProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionRegularProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionRegularProperties : pb::IMessage<GunDefinitionRegularProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionRegularProperties> _parser = new pb::MessageParser<GunDefinitionRegularProperties>(() => new GunDefinitionRegularProperties());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionRegularProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegularProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegularProperties(GunDefinitionRegularProperties other) : this() {
      _hasBits0 = other._hasBits0;
      reload_ = other.reload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionRegularProperties Clone() {
      return new GunDefinitionRegularProperties(this);
    }

    /// <summary>Field number for the "reload" field.</summary>
    public const int ReloadFieldNumber = 1;
    private readonly static float ReloadDefaultValue = 0F;

    private float reload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Reload {
      get { if ((_hasBits0 & 1) != 0) { return reload_; } else { return ReloadDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reload_ = value;
      }
    }
    /// <summary>Gets whether the "reload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReload {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReload() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionRegularProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionRegularProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Reload, other.Reload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReload) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Reload);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReload) {
        output.WriteRawTag(13);
        output.WriteFloat(Reload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReload) {
        output.WriteRawTag(13);
        output.WriteFloat(Reload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReload) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionRegularProperties other) {
      if (other == null) {
        return;
      }
      if (other.HasReload) {
        Reload = other.Reload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Reload = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Reload = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionAutoLoader : pb::IMessage<GunDefinitionAutoLoader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionAutoLoader> _parser = new pb::MessageParser<GunDefinitionAutoLoader>(() => new GunDefinitionAutoLoader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionAutoLoader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoader(GunDefinitionAutoLoader other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      extension_ = other.extension_ != null ? other.extension_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoader Clone() {
      return new GunDefinitionAutoLoader(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Blitzkit.GunDefinitionBase base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionBase Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 2;
    private global::Blitzkit.GunDefinitionAutoLoaderProperties extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionAutoLoaderProperties Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionAutoLoader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionAutoLoader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (extension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionAutoLoader other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Blitzkit.GunDefinitionBase();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.extension_ != null) {
        if (extension_ == null) {
          Extension = new global::Blitzkit.GunDefinitionAutoLoaderProperties();
        }
        Extension.MergeFrom(other.Extension);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionAutoLoaderProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionAutoLoaderProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionAutoLoaderProperties : pb::IMessage<GunDefinitionAutoLoaderProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionAutoLoaderProperties> _parser = new pb::MessageParser<GunDefinitionAutoLoaderProperties>(() => new GunDefinitionAutoLoaderProperties());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionAutoLoaderProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoaderProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoaderProperties(GunDefinitionAutoLoaderProperties other) : this() {
      _hasBits0 = other._hasBits0;
      clipReload_ = other.clipReload_;
      intraClip_ = other.intraClip_;
      shellCount_ = other.shellCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoLoaderProperties Clone() {
      return new GunDefinitionAutoLoaderProperties(this);
    }

    /// <summary>Field number for the "clip_reload" field.</summary>
    public const int ClipReloadFieldNumber = 1;
    private readonly static float ClipReloadDefaultValue = 0F;

    private float clipReload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ClipReload {
      get { if ((_hasBits0 & 1) != 0) { return clipReload_; } else { return ClipReloadDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clipReload_ = value;
      }
    }
    /// <summary>Gets whether the "clip_reload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClipReload {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clip_reload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClipReload() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "intra_clip" field.</summary>
    public const int IntraClipFieldNumber = 2;
    private readonly static float IntraClipDefaultValue = 0F;

    private float intraClip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IntraClip {
      get { if ((_hasBits0 & 2) != 0) { return intraClip_; } else { return IntraClipDefaultValue; } }
      set {
        _hasBits0 |= 2;
        intraClip_ = value;
      }
    }
    /// <summary>Gets whether the "intra_clip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntraClip {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "intra_clip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntraClip() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shell_count" field.</summary>
    public const int ShellCountFieldNumber = 3;
    private readonly static float ShellCountDefaultValue = 0F;

    private float shellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShellCount {
      get { if ((_hasBits0 & 4) != 0) { return shellCount_; } else { return ShellCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        shellCount_ = value;
      }
    }
    /// <summary>Gets whether the "shell_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShellCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "shell_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShellCount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionAutoLoaderProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionAutoLoaderProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ClipReload, other.ClipReload)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IntraClip, other.IntraClip)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShellCount, other.ShellCount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClipReload) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ClipReload);
      if (HasIntraClip) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IntraClip);
      if (HasShellCount) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShellCount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClipReload) {
        output.WriteRawTag(13);
        output.WriteFloat(ClipReload);
      }
      if (HasIntraClip) {
        output.WriteRawTag(21);
        output.WriteFloat(IntraClip);
      }
      if (HasShellCount) {
        output.WriteRawTag(29);
        output.WriteFloat(ShellCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClipReload) {
        output.WriteRawTag(13);
        output.WriteFloat(ClipReload);
      }
      if (HasIntraClip) {
        output.WriteRawTag(21);
        output.WriteFloat(IntraClip);
      }
      if (HasShellCount) {
        output.WriteRawTag(29);
        output.WriteFloat(ShellCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClipReload) {
        size += 1 + 4;
      }
      if (HasIntraClip) {
        size += 1 + 4;
      }
      if (HasShellCount) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionAutoLoaderProperties other) {
      if (other == null) {
        return;
      }
      if (other.HasClipReload) {
        ClipReload = other.ClipReload;
      }
      if (other.HasIntraClip) {
        IntraClip = other.IntraClip;
      }
      if (other.HasShellCount) {
        ShellCount = other.ShellCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            ClipReload = input.ReadFloat();
            break;
          }
          case 21: {
            IntraClip = input.ReadFloat();
            break;
          }
          case 29: {
            ShellCount = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            ClipReload = input.ReadFloat();
            break;
          }
          case 21: {
            IntraClip = input.ReadFloat();
            break;
          }
          case 29: {
            ShellCount = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionAutoReloader : pb::IMessage<GunDefinitionAutoReloader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionAutoReloader> _parser = new pb::MessageParser<GunDefinitionAutoReloader>(() => new GunDefinitionAutoReloader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionAutoReloader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloader(GunDefinitionAutoReloader other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      extension_ = other.extension_ != null ? other.extension_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloader Clone() {
      return new GunDefinitionAutoReloader(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Blitzkit.GunDefinitionBase base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionBase Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 2;
    private global::Blitzkit.GunDefinitionAutoReloaderProperties extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.GunDefinitionAutoReloaderProperties Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionAutoReloader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionAutoReloader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (extension_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (extension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionAutoReloader other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Blitzkit.GunDefinitionBase();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.extension_ != null) {
        if (extension_ == null) {
          Extension = new global::Blitzkit.GunDefinitionAutoReloaderProperties();
        }
        Extension.MergeFrom(other.Extension);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionAutoReloaderProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Blitzkit.GunDefinitionBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (extension_ == null) {
              Extension = new global::Blitzkit.GunDefinitionAutoReloaderProperties();
            }
            input.ReadMessage(Extension);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionAutoReloaderProperties : pb::IMessage<GunDefinitionAutoReloaderProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionAutoReloaderProperties> _parser = new pb::MessageParser<GunDefinitionAutoReloaderProperties>(() => new GunDefinitionAutoReloaderProperties());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionAutoReloaderProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloaderProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloaderProperties(GunDefinitionAutoReloaderProperties other) : this() {
      _hasBits0 = other._hasBits0;
      shellReloads_ = other.shellReloads_.Clone();
      intraClip_ = other.intraClip_;
      shellCount_ = other.shellCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionAutoReloaderProperties Clone() {
      return new GunDefinitionAutoReloaderProperties(this);
    }

    /// <summary>Field number for the "shell_reloads" field.</summary>
    public const int ShellReloadsFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_shellReloads_codec
        = pb::FieldCodec.ForFloat(13);
    private readonly pbc::RepeatedField<float> shellReloads_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> ShellReloads {
      get { return shellReloads_; }
    }

    /// <summary>Field number for the "intra_clip" field.</summary>
    public const int IntraClipFieldNumber = 2;
    private readonly static float IntraClipDefaultValue = 0F;

    private float intraClip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IntraClip {
      get { if ((_hasBits0 & 1) != 0) { return intraClip_; } else { return IntraClipDefaultValue; } }
      set {
        _hasBits0 |= 1;
        intraClip_ = value;
      }
    }
    /// <summary>Gets whether the "intra_clip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIntraClip {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "intra_clip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIntraClip() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "shell_count" field.</summary>
    public const int ShellCountFieldNumber = 3;
    private readonly static float ShellCountDefaultValue = 0F;

    private float shellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShellCount {
      get { if ((_hasBits0 & 2) != 0) { return shellCount_; } else { return ShellCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shellCount_ = value;
      }
    }
    /// <summary>Gets whether the "shell_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShellCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "shell_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShellCount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionAutoReloaderProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionAutoReloaderProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shellReloads_.Equals(other.shellReloads_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IntraClip, other.IntraClip)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShellCount, other.ShellCount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shellReloads_.GetHashCode();
      if (HasIntraClip) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IntraClip);
      if (HasShellCount) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShellCount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shellReloads_.WriteTo(output, _repeated_shellReloads_codec);
      if (HasIntraClip) {
        output.WriteRawTag(21);
        output.WriteFloat(IntraClip);
      }
      if (HasShellCount) {
        output.WriteRawTag(29);
        output.WriteFloat(ShellCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shellReloads_.WriteTo(ref output, _repeated_shellReloads_codec);
      if (HasIntraClip) {
        output.WriteRawTag(21);
        output.WriteFloat(IntraClip);
      }
      if (HasShellCount) {
        output.WriteRawTag(29);
        output.WriteFloat(ShellCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += shellReloads_.CalculateSize(_repeated_shellReloads_codec);
      if (HasIntraClip) {
        size += 1 + 4;
      }
      if (HasShellCount) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionAutoReloaderProperties other) {
      if (other == null) {
        return;
      }
      shellReloads_.Add(other.shellReloads_);
      if (other.HasIntraClip) {
        IntraClip = other.IntraClip;
      }
      if (other.HasShellCount) {
        ShellCount = other.ShellCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            shellReloads_.AddEntriesFrom(input, _repeated_shellReloads_codec);
            break;
          }
          case 21: {
            IntraClip = input.ReadFloat();
            break;
          }
          case 29: {
            ShellCount = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            shellReloads_.AddEntriesFrom(ref input, _repeated_shellReloads_codec);
            break;
          }
          case 21: {
            IntraClip = input.ReadFloat();
            break;
          }
          case 29: {
            ShellCount = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GunDefinitionBase : pb::IMessage<GunDefinitionBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDefinitionBase> _parser = new pb::MessageParser<GunDefinitionBase>(() => new GunDefinitionBase());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GunDefinitionBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionBase(GunDefinitionBase other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      rotationSpeed_ = other.rotationSpeed_;
      researchCost_ = other.researchCost_ != null ? other.researchCost_.Clone() : null;
      weight_ = other.weight_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      tier_ = other.tier_;
      shells_ = other.shells_.Clone();
      camouflageLoss_ = other.camouflageLoss_;
      aimTime_ = other.aimTime_;
      dispersionBase_ = other.dispersionBase_;
      dispersionTraverse_ = other.dispersionTraverse_;
      dispersionShot_ = other.dispersionShot_;
      dispersionDamaged_ = other.dispersionDamaged_;
      unlocks_ = other.unlocks_.Clone();
      shellCapacity_ = other.shellCapacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GunDefinitionBase Clone() {
      return new GunDefinitionBase(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rotation_speed" field.</summary>
    public const int RotationSpeedFieldNumber = 2;
    private readonly static float RotationSpeedDefaultValue = 0F;

    private float rotationSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RotationSpeed {
      get { if ((_hasBits0 & 2) != 0) { return rotationSpeed_; } else { return RotationSpeedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rotationSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "rotation_speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRotationSpeed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rotation_speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRotationSpeed() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "research_cost" field.</summary>
    public const int ResearchCostFieldNumber = 3;
    private global::Blitzkit.ResearchCost researchCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ResearchCost ResearchCost {
      get { return researchCost_; }
      set {
        researchCost_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private readonly static uint WeightDefaultValue = 0;

    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Weight {
      get { if ((_hasBits0 & 4) != 0) { return weight_; } else { return WeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 6;
    private readonly static uint TierDefaultValue = 0;

    private uint tier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tier {
      get { if ((_hasBits0 & 8) != 0) { return tier_; } else { return TierDefaultValue; } }
      set {
        _hasBits0 |= 8;
        tier_ = value;
      }
    }
    /// <summary>Gets whether the "tier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTier {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "tier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTier() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shells" field.</summary>
    public const int ShellsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Blitzkit.ShellDefinition> _repeated_shells_codec
        = pb::FieldCodec.ForMessage(58, global::Blitzkit.ShellDefinition.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.ShellDefinition> shells_ = new pbc::RepeatedField<global::Blitzkit.ShellDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.ShellDefinition> Shells {
      get { return shells_; }
    }

    /// <summary>Field number for the "camouflage_loss" field.</summary>
    public const int CamouflageLossFieldNumber = 8;
    private readonly static float CamouflageLossDefaultValue = 0F;

    private float camouflageLoss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CamouflageLoss {
      get { if ((_hasBits0 & 16) != 0) { return camouflageLoss_; } else { return CamouflageLossDefaultValue; } }
      set {
        _hasBits0 |= 16;
        camouflageLoss_ = value;
      }
    }
    /// <summary>Gets whether the "camouflage_loss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamouflageLoss {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "camouflage_loss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamouflageLoss() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "aim_time" field.</summary>
    public const int AimTimeFieldNumber = 9;
    private readonly static float AimTimeDefaultValue = 0F;

    private float aimTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AimTime {
      get { if ((_hasBits0 & 32) != 0) { return aimTime_; } else { return AimTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        aimTime_ = value;
      }
    }
    /// <summary>Gets whether the "aim_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAimTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "aim_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAimTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "dispersion_base" field.</summary>
    public const int DispersionBaseFieldNumber = 10;
    private readonly static float DispersionBaseDefaultValue = 0F;

    private float dispersionBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionBase {
      get { if ((_hasBits0 & 64) != 0) { return dispersionBase_; } else { return DispersionBaseDefaultValue; } }
      set {
        _hasBits0 |= 64;
        dispersionBase_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_base" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionBase {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_base" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionBase() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "dispersion_traverse" field.</summary>
    public const int DispersionTraverseFieldNumber = 11;
    private readonly static float DispersionTraverseDefaultValue = 0F;

    private float dispersionTraverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionTraverse {
      get { if ((_hasBits0 & 128) != 0) { return dispersionTraverse_; } else { return DispersionTraverseDefaultValue; } }
      set {
        _hasBits0 |= 128;
        dispersionTraverse_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_traverse" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionTraverse {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_traverse" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionTraverse() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "dispersion_shot" field.</summary>
    public const int DispersionShotFieldNumber = 12;
    private readonly static float DispersionShotDefaultValue = 0F;

    private float dispersionShot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionShot {
      get { if ((_hasBits0 & 256) != 0) { return dispersionShot_; } else { return DispersionShotDefaultValue; } }
      set {
        _hasBits0 |= 256;
        dispersionShot_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_shot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionShot {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_shot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionShot() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "dispersion_damaged" field.</summary>
    public const int DispersionDamagedFieldNumber = 13;
    private readonly static float DispersionDamagedDefaultValue = 0F;

    private float dispersionDamaged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DispersionDamaged {
      get { if ((_hasBits0 & 512) != 0) { return dispersionDamaged_; } else { return DispersionDamagedDefaultValue; } }
      set {
        _hasBits0 |= 512;
        dispersionDamaged_ = value;
      }
    }
    /// <summary>Gets whether the "dispersion_damaged" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDispersionDamaged {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "dispersion_damaged" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDispersionDamaged() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "unlocks" field.</summary>
    public const int UnlocksFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Blitzkit.Unlock> _repeated_unlocks_codec
        = pb::FieldCodec.ForMessage(114, global::Blitzkit.Unlock.Parser);
    private readonly pbc::RepeatedField<global::Blitzkit.Unlock> unlocks_ = new pbc::RepeatedField<global::Blitzkit.Unlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.Unlock> Unlocks {
      get { return unlocks_; }
    }

    /// <summary>Field number for the "shell_capacity" field.</summary>
    public const int ShellCapacityFieldNumber = 15;
    private readonly static uint ShellCapacityDefaultValue = 0;

    private uint shellCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ShellCapacity {
      get { if ((_hasBits0 & 1024) != 0) { return shellCapacity_; } else { return ShellCapacityDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        shellCapacity_ = value;
      }
    }
    /// <summary>Gets whether the "shell_capacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShellCapacity {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "shell_capacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShellCapacity() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GunDefinitionBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GunDefinitionBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationSpeed, other.RotationSpeed)) return false;
      if (!object.Equals(ResearchCost, other.ResearchCost)) return false;
      if (Weight != other.Weight) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (Tier != other.Tier) return false;
      if(!shells_.Equals(other.shells_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CamouflageLoss, other.CamouflageLoss)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AimTime, other.AimTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionBase, other.DispersionBase)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionTraverse, other.DispersionTraverse)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionShot, other.DispersionShot)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DispersionDamaged, other.DispersionDamaged)) return false;
      if(!unlocks_.Equals(other.unlocks_)) return false;
      if (ShellCapacity != other.ShellCapacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasRotationSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationSpeed);
      if (researchCost_ != null) hash ^= ResearchCost.GetHashCode();
      if (HasWeight) hash ^= Weight.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (HasTier) hash ^= Tier.GetHashCode();
      hash ^= shells_.GetHashCode();
      if (HasCamouflageLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CamouflageLoss);
      if (HasAimTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AimTime);
      if (HasDispersionBase) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionBase);
      if (HasDispersionTraverse) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionTraverse);
      if (HasDispersionShot) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionShot);
      if (HasDispersionDamaged) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DispersionDamaged);
      hash ^= unlocks_.GetHashCode();
      if (HasShellCapacity) hash ^= ShellCapacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasRotationSpeed) {
        output.WriteRawTag(21);
        output.WriteFloat(RotationSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResearchCost);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Weight);
      }
      if (name_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Name);
      }
      if (HasTier) {
        output.WriteRawTag(48);
        output.WriteUInt32(Tier);
      }
      shells_.WriteTo(output, _repeated_shells_codec);
      if (HasCamouflageLoss) {
        output.WriteRawTag(69);
        output.WriteFloat(CamouflageLoss);
      }
      if (HasAimTime) {
        output.WriteRawTag(77);
        output.WriteFloat(AimTime);
      }
      if (HasDispersionBase) {
        output.WriteRawTag(85);
        output.WriteFloat(DispersionBase);
      }
      if (HasDispersionTraverse) {
        output.WriteRawTag(93);
        output.WriteFloat(DispersionTraverse);
      }
      if (HasDispersionShot) {
        output.WriteRawTag(101);
        output.WriteFloat(DispersionShot);
      }
      if (HasDispersionDamaged) {
        output.WriteRawTag(109);
        output.WriteFloat(DispersionDamaged);
      }
      unlocks_.WriteTo(output, _repeated_unlocks_codec);
      if (HasShellCapacity) {
        output.WriteRawTag(120);
        output.WriteUInt32(ShellCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasRotationSpeed) {
        output.WriteRawTag(21);
        output.WriteFloat(RotationSpeed);
      }
      if (researchCost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResearchCost);
      }
      if (HasWeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Weight);
      }
      if (name_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Name);
      }
      if (HasTier) {
        output.WriteRawTag(48);
        output.WriteUInt32(Tier);
      }
      shells_.WriteTo(ref output, _repeated_shells_codec);
      if (HasCamouflageLoss) {
        output.WriteRawTag(69);
        output.WriteFloat(CamouflageLoss);
      }
      if (HasAimTime) {
        output.WriteRawTag(77);
        output.WriteFloat(AimTime);
      }
      if (HasDispersionBase) {
        output.WriteRawTag(85);
        output.WriteFloat(DispersionBase);
      }
      if (HasDispersionTraverse) {
        output.WriteRawTag(93);
        output.WriteFloat(DispersionTraverse);
      }
      if (HasDispersionShot) {
        output.WriteRawTag(101);
        output.WriteFloat(DispersionShot);
      }
      if (HasDispersionDamaged) {
        output.WriteRawTag(109);
        output.WriteFloat(DispersionDamaged);
      }
      unlocks_.WriteTo(ref output, _repeated_unlocks_codec);
      if (HasShellCapacity) {
        output.WriteRawTag(120);
        output.WriteUInt32(ShellCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasRotationSpeed) {
        size += 1 + 4;
      }
      if (researchCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResearchCost);
      }
      if (HasWeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (HasTier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tier);
      }
      size += shells_.CalculateSize(_repeated_shells_codec);
      if (HasCamouflageLoss) {
        size += 1 + 4;
      }
      if (HasAimTime) {
        size += 1 + 4;
      }
      if (HasDispersionBase) {
        size += 1 + 4;
      }
      if (HasDispersionTraverse) {
        size += 1 + 4;
      }
      if (HasDispersionShot) {
        size += 1 + 4;
      }
      if (HasDispersionDamaged) {
        size += 1 + 4;
      }
      size += unlocks_.CalculateSize(_repeated_unlocks_codec);
      if (HasShellCapacity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShellCapacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GunDefinitionBase other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasRotationSpeed) {
        RotationSpeed = other.RotationSpeed;
      }
      if (other.researchCost_ != null) {
        if (researchCost_ == null) {
          ResearchCost = new global::Blitzkit.ResearchCost();
        }
        ResearchCost.MergeFrom(other.ResearchCost);
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.HasTier) {
        Tier = other.Tier;
      }
      shells_.Add(other.shells_);
      if (other.HasCamouflageLoss) {
        CamouflageLoss = other.CamouflageLoss;
      }
      if (other.HasAimTime) {
        AimTime = other.AimTime;
      }
      if (other.HasDispersionBase) {
        DispersionBase = other.DispersionBase;
      }
      if (other.HasDispersionTraverse) {
        DispersionTraverse = other.DispersionTraverse;
      }
      if (other.HasDispersionShot) {
        DispersionShot = other.DispersionShot;
      }
      if (other.HasDispersionDamaged) {
        DispersionDamaged = other.DispersionDamaged;
      }
      unlocks_.Add(other.unlocks_);
      if (other.HasShellCapacity) {
        ShellCapacity = other.ShellCapacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 21: {
            RotationSpeed = input.ReadFloat();
            break;
          }
          case 26: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 32: {
            Weight = input.ReadUInt32();
            break;
          }
          case 42: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 48: {
            Tier = input.ReadUInt32();
            break;
          }
          case 58: {
            shells_.AddEntriesFrom(input, _repeated_shells_codec);
            break;
          }
          case 69: {
            CamouflageLoss = input.ReadFloat();
            break;
          }
          case 77: {
            AimTime = input.ReadFloat();
            break;
          }
          case 85: {
            DispersionBase = input.ReadFloat();
            break;
          }
          case 93: {
            DispersionTraverse = input.ReadFloat();
            break;
          }
          case 101: {
            DispersionShot = input.ReadFloat();
            break;
          }
          case 109: {
            DispersionDamaged = input.ReadFloat();
            break;
          }
          case 114: {
            unlocks_.AddEntriesFrom(input, _repeated_unlocks_codec);
            break;
          }
          case 120: {
            ShellCapacity = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 21: {
            RotationSpeed = input.ReadFloat();
            break;
          }
          case 26: {
            if (researchCost_ == null) {
              ResearchCost = new global::Blitzkit.ResearchCost();
            }
            input.ReadMessage(ResearchCost);
            break;
          }
          case 32: {
            Weight = input.ReadUInt32();
            break;
          }
          case 42: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 48: {
            Tier = input.ReadUInt32();
            break;
          }
          case 58: {
            shells_.AddEntriesFrom(ref input, _repeated_shells_codec);
            break;
          }
          case 69: {
            CamouflageLoss = input.ReadFloat();
            break;
          }
          case 77: {
            AimTime = input.ReadFloat();
            break;
          }
          case 85: {
            DispersionBase = input.ReadFloat();
            break;
          }
          case 93: {
            DispersionTraverse = input.ReadFloat();
            break;
          }
          case 101: {
            DispersionShot = input.ReadFloat();
            break;
          }
          case 109: {
            DispersionDamaged = input.ReadFloat();
            break;
          }
          case 114: {
            unlocks_.AddEntriesFrom(ref input, _repeated_unlocks_codec);
            break;
          }
          case 120: {
            ShellCapacity = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ShellDefinition : pb::IMessage<ShellDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShellDefinition> _parser = new pb::MessageParser<ShellDefinition>(() => new ShellDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShellDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellDefinition(ShellDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      velocity_ = other.velocity_;
      armorDamage_ = other.armorDamage_;
      moduleDamage_ = other.moduleDamage_;
      caliber_ = other.caliber_;
      icon_ = other.icon_;
      penetration_ = other.penetration_ != null ? other.penetration_.Clone() : null;
      type_ = other.type_;
      normalization_ = other.normalization_;
      ricochet_ = other.ricochet_;
      explosionRadius_ = other.explosionRadius_;
      range_ = other.range_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellDefinition Clone() {
      return new ShellDefinition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Blitzkit.I18nString name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.I18nString Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 3;
    private readonly static uint VelocityDefaultValue = 0;

    private uint velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Velocity {
      get { if ((_hasBits0 & 2) != 0) { return velocity_; } else { return VelocityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        velocity_ = value;
      }
    }
    /// <summary>Gets whether the "velocity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVelocity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "velocity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "armor_damage" field.</summary>
    public const int ArmorDamageFieldNumber = 4;
    private readonly static uint ArmorDamageDefaultValue = 0;

    private uint armorDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ArmorDamage {
      get { if ((_hasBits0 & 4) != 0) { return armorDamage_; } else { return ArmorDamageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        armorDamage_ = value;
      }
    }
    /// <summary>Gets whether the "armor_damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArmorDamage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "armor_damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArmorDamage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "module_damage" field.</summary>
    public const int ModuleDamageFieldNumber = 5;
    private readonly static uint ModuleDamageDefaultValue = 0;

    private uint moduleDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModuleDamage {
      get { if ((_hasBits0 & 8) != 0) { return moduleDamage_; } else { return ModuleDamageDefaultValue; } }
      set {
        _hasBits0 |= 8;
        moduleDamage_ = value;
      }
    }
    /// <summary>Gets whether the "module_damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleDamage {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "module_damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleDamage() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "caliber" field.</summary>
    public const int CaliberFieldNumber = 6;
    private readonly static float CaliberDefaultValue = 0F;

    private float caliber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Caliber {
      get { if ((_hasBits0 & 16) != 0) { return caliber_; } else { return CaliberDefaultValue; } }
      set {
        _hasBits0 |= 16;
        caliber_ = value;
      }
    }
    /// <summary>Gets whether the "caliber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCaliber {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "caliber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCaliber() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 7;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "penetration" field.</summary>
    public const int PenetrationFieldNumber = 8;
    private global::Blitzkit.ShellPenetration penetration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ShellPenetration Penetration {
      get { return penetration_; }
      set {
        penetration_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 9;
    private readonly static global::Blitzkit.ShellType TypeDefaultValue = global::Blitzkit.ShellType.Ap;

    private global::Blitzkit.ShellType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ShellType Type {
      get { if ((_hasBits0 & 32) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "normalization" field.</summary>
    public const int NormalizationFieldNumber = 10;
    private readonly static float NormalizationDefaultValue = 0F;

    private float normalization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Normalization {
      get { if ((_hasBits0 & 64) != 0) { return normalization_; } else { return NormalizationDefaultValue; } }
      set {
        _hasBits0 |= 64;
        normalization_ = value;
      }
    }
    /// <summary>Gets whether the "normalization" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNormalization {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "normalization" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNormalization() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "ricochet" field.</summary>
    public const int RicochetFieldNumber = 11;
    private readonly static float RicochetDefaultValue = 0F;

    private float ricochet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Ricochet {
      get { if ((_hasBits0 & 128) != 0) { return ricochet_; } else { return RicochetDefaultValue; } }
      set {
        _hasBits0 |= 128;
        ricochet_ = value;
      }
    }
    /// <summary>Gets whether the "ricochet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRicochet {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "ricochet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRicochet() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "explosion_radius" field.</summary>
    public const int ExplosionRadiusFieldNumber = 12;
    private readonly static float ExplosionRadiusDefaultValue = 0F;

    private float explosionRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExplosionRadius {
      get { if ((_hasBits0 & 256) != 0) { return explosionRadius_; } else { return ExplosionRadiusDefaultValue; } }
      set {
        _hasBits0 |= 256;
        explosionRadius_ = value;
      }
    }
    /// <summary>Gets whether the "explosion_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExplosionRadius {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "explosion_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExplosionRadius() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 13;
    private readonly static uint RangeDefaultValue = 0;

    private uint range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Range {
      get { if ((_hasBits0 & 512) != 0) { return range_; } else { return RangeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        range_ = value;
      }
    }
    /// <summary>Gets whether the "range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRange {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRange() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShellDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShellDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (Velocity != other.Velocity) return false;
      if (ArmorDamage != other.ArmorDamage) return false;
      if (ModuleDamage != other.ModuleDamage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Caliber, other.Caliber)) return false;
      if (Icon != other.Icon) return false;
      if (!object.Equals(Penetration, other.Penetration)) return false;
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Normalization, other.Normalization)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ricochet, other.Ricochet)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExplosionRadius, other.ExplosionRadius)) return false;
      if (Range != other.Range) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (HasVelocity) hash ^= Velocity.GetHashCode();
      if (HasArmorDamage) hash ^= ArmorDamage.GetHashCode();
      if (HasModuleDamage) hash ^= ModuleDamage.GetHashCode();
      if (HasCaliber) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Caliber);
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (penetration_ != null) hash ^= Penetration.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasNormalization) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Normalization);
      if (HasRicochet) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ricochet);
      if (HasExplosionRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExplosionRadius);
      if (HasRange) hash ^= Range.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (HasVelocity) {
        output.WriteRawTag(24);
        output.WriteUInt32(Velocity);
      }
      if (HasArmorDamage) {
        output.WriteRawTag(32);
        output.WriteUInt32(ArmorDamage);
      }
      if (HasModuleDamage) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModuleDamage);
      }
      if (HasCaliber) {
        output.WriteRawTag(53);
        output.WriteFloat(Caliber);
      }
      if (HasIcon) {
        output.WriteRawTag(58);
        output.WriteString(Icon);
      }
      if (penetration_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Penetration);
      }
      if (HasType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Type);
      }
      if (HasNormalization) {
        output.WriteRawTag(85);
        output.WriteFloat(Normalization);
      }
      if (HasRicochet) {
        output.WriteRawTag(93);
        output.WriteFloat(Ricochet);
      }
      if (HasExplosionRadius) {
        output.WriteRawTag(101);
        output.WriteFloat(ExplosionRadius);
      }
      if (HasRange) {
        output.WriteRawTag(104);
        output.WriteUInt32(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (HasVelocity) {
        output.WriteRawTag(24);
        output.WriteUInt32(Velocity);
      }
      if (HasArmorDamage) {
        output.WriteRawTag(32);
        output.WriteUInt32(ArmorDamage);
      }
      if (HasModuleDamage) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModuleDamage);
      }
      if (HasCaliber) {
        output.WriteRawTag(53);
        output.WriteFloat(Caliber);
      }
      if (HasIcon) {
        output.WriteRawTag(58);
        output.WriteString(Icon);
      }
      if (penetration_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Penetration);
      }
      if (HasType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Type);
      }
      if (HasNormalization) {
        output.WriteRawTag(85);
        output.WriteFloat(Normalization);
      }
      if (HasRicochet) {
        output.WriteRawTag(93);
        output.WriteFloat(Ricochet);
      }
      if (HasExplosionRadius) {
        output.WriteRawTag(101);
        output.WriteFloat(ExplosionRadius);
      }
      if (HasRange) {
        output.WriteRawTag(104);
        output.WriteUInt32(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (HasVelocity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Velocity);
      }
      if (HasArmorDamage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ArmorDamage);
      }
      if (HasModuleDamage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModuleDamage);
      }
      if (HasCaliber) {
        size += 1 + 4;
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (penetration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Penetration);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasNormalization) {
        size += 1 + 4;
      }
      if (HasRicochet) {
        size += 1 + 4;
      }
      if (HasExplosionRadius) {
        size += 1 + 4;
      }
      if (HasRange) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Range);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShellDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.name_ != null) {
        if (name_ == null) {
          Name = new global::Blitzkit.I18nString();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.HasVelocity) {
        Velocity = other.Velocity;
      }
      if (other.HasArmorDamage) {
        ArmorDamage = other.ArmorDamage;
      }
      if (other.HasModuleDamage) {
        ModuleDamage = other.ModuleDamage;
      }
      if (other.HasCaliber) {
        Caliber = other.Caliber;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.penetration_ != null) {
        if (penetration_ == null) {
          Penetration = new global::Blitzkit.ShellPenetration();
        }
        Penetration.MergeFrom(other.Penetration);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasNormalization) {
        Normalization = other.Normalization;
      }
      if (other.HasRicochet) {
        Ricochet = other.Ricochet;
      }
      if (other.HasExplosionRadius) {
        ExplosionRadius = other.ExplosionRadius;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 24: {
            Velocity = input.ReadUInt32();
            break;
          }
          case 32: {
            ArmorDamage = input.ReadUInt32();
            break;
          }
          case 40: {
            ModuleDamage = input.ReadUInt32();
            break;
          }
          case 53: {
            Caliber = input.ReadFloat();
            break;
          }
          case 58: {
            Icon = input.ReadString();
            break;
          }
          case 66: {
            if (penetration_ == null) {
              Penetration = new global::Blitzkit.ShellPenetration();
            }
            input.ReadMessage(Penetration);
            break;
          }
          case 72: {
            Type = (global::Blitzkit.ShellType) input.ReadEnum();
            break;
          }
          case 85: {
            Normalization = input.ReadFloat();
            break;
          }
          case 93: {
            Ricochet = input.ReadFloat();
            break;
          }
          case 101: {
            ExplosionRadius = input.ReadFloat();
            break;
          }
          case 104: {
            Range = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (name_ == null) {
              Name = new global::Blitzkit.I18nString();
            }
            input.ReadMessage(Name);
            break;
          }
          case 24: {
            Velocity = input.ReadUInt32();
            break;
          }
          case 32: {
            ArmorDamage = input.ReadUInt32();
            break;
          }
          case 40: {
            ModuleDamage = input.ReadUInt32();
            break;
          }
          case 53: {
            Caliber = input.ReadFloat();
            break;
          }
          case 58: {
            Icon = input.ReadString();
            break;
          }
          case 66: {
            if (penetration_ == null) {
              Penetration = new global::Blitzkit.ShellPenetration();
            }
            input.ReadMessage(Penetration);
            break;
          }
          case 72: {
            Type = (global::Blitzkit.ShellType) input.ReadEnum();
            break;
          }
          case 85: {
            Normalization = input.ReadFloat();
            break;
          }
          case 93: {
            Ricochet = input.ReadFloat();
            break;
          }
          case 101: {
            ExplosionRadius = input.ReadFloat();
            break;
          }
          case 104: {
            Range = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ShellPenetration : pb::IMessage<ShellPenetration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShellPenetration> _parser = new pb::MessageParser<ShellPenetration>(() => new ShellPenetration());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShellPenetration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellPenetration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellPenetration(ShellPenetration other) : this() {
      _hasBits0 = other._hasBits0;
      near_ = other.near_;
      far_ = other.far_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShellPenetration Clone() {
      return new ShellPenetration(this);
    }

    /// <summary>Field number for the "near" field.</summary>
    public const int NearFieldNumber = 1;
    private readonly static float NearDefaultValue = 0F;

    private float near_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Near {
      get { if ((_hasBits0 & 1) != 0) { return near_; } else { return NearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        near_ = value;
      }
    }
    /// <summary>Gets whether the "near" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "near" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNear() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "far" field.</summary>
    public const int FarFieldNumber = 2;
    private readonly static float FarDefaultValue = 0F;

    private float far_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Far {
      get { if ((_hasBits0 & 2) != 0) { return far_; } else { return FarDefaultValue; } }
      set {
        _hasBits0 |= 2;
        far_ = value;
      }
    }
    /// <summary>Gets whether the "far" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFar {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "far" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFar() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShellPenetration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShellPenetration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Near, other.Near)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Far, other.Far)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNear) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Near);
      if (HasFar) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Far);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNear) {
        output.WriteRawTag(13);
        output.WriteFloat(Near);
      }
      if (HasFar) {
        output.WriteRawTag(21);
        output.WriteFloat(Far);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNear) {
        output.WriteRawTag(13);
        output.WriteFloat(Near);
      }
      if (HasFar) {
        output.WriteRawTag(21);
        output.WriteFloat(Far);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNear) {
        size += 1 + 4;
      }
      if (HasFar) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShellPenetration other) {
      if (other == null) {
        return;
      }
      if (other.HasNear) {
        Near = other.Near;
      }
      if (other.HasFar) {
        Far = other.Far;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Near = input.ReadFloat();
            break;
          }
          case 21: {
            Far = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Near = input.ReadFloat();
            break;
          }
          case 21: {
            Far = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Unlock : pb::IMessage<Unlock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unlock> _parser = new pb::MessageParser<Unlock>(() => new Unlock());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Unlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlock(Unlock other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      type_ = other.type_;
      cost_ = other.cost_ != null ? other.cost_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlock Clone() {
      return new Unlock(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Blitzkit.ModuleType TypeDefaultValue = global::Blitzkit.ModuleType.Vehicle;

    private global::Blitzkit.ModuleType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.ModuleType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private global::Blitzkit.UnlockCost cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.UnlockCost Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Unlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Unlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Cost, other.Cost)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (cost_ != null) hash ^= Cost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (cost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (cost_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (cost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Unlock other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.cost_ != null) {
        if (cost_ == null) {
          Cost = new global::Blitzkit.UnlockCost();
        }
        Cost.MergeFrom(other.Cost);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Blitzkit.ModuleType) input.ReadEnum();
            break;
          }
          case 26: {
            if (cost_ == null) {
              Cost = new global::Blitzkit.UnlockCost();
            }
            input.ReadMessage(Cost);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Blitzkit.ModuleType) input.ReadEnum();
            break;
          }
          case 26: {
            if (cost_ == null) {
              Cost = new global::Blitzkit.UnlockCost();
            }
            input.ReadMessage(Cost);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UnlockCost : pb::IMessage<UnlockCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockCost> _parser = new pb::MessageParser<UnlockCost>(() => new UnlockCost());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockCost(UnlockCost other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockCost Clone() {
      return new UnlockCost(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static int ValueDefaultValue = 0;

    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockCost other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Crew : pb::IMessage<Crew>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Crew> _parser = new pb::MessageParser<Crew>(() => new Crew());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Crew> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyTankDefinitionsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Crew() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Crew(Crew other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      count_ = other.count_;
      substitute_ = other.substitute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Crew Clone() {
      return new Crew(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Blitzkit.CrewType TypeDefaultValue = global::Blitzkit.CrewType.Commander;

    private global::Blitzkit.CrewType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.CrewType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static uint CountDefaultValue = 0;

    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "substitute" field.</summary>
    public const int SubstituteFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Blitzkit.CrewType> _repeated_substitute_codec
        = pb::FieldCodec.ForEnum(24, x => (int) x, x => (global::Blitzkit.CrewType) x);
    private readonly pbc::RepeatedField<global::Blitzkit.CrewType> substitute_ = new pbc::RepeatedField<global::Blitzkit.CrewType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blitzkit.CrewType> Substitute {
      get { return substitute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Crew);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Crew other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Count != other.Count) return false;
      if(!substitute_.Equals(other.substitute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      hash ^= substitute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      substitute_.WriteTo(output, _repeated_substitute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      substitute_.WriteTo(ref output, _repeated_substitute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      size += substitute_.CalculateSize(_repeated_substitute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Crew other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      substitute_.Add(other.substitute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Blitzkit.CrewType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            substitute_.AddEntriesFrom(input, _repeated_substitute_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Blitzkit.CrewType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            substitute_.AddEntriesFrom(ref input, _repeated_substitute_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
