// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: packages/core/src/protos/legacy_average_definitions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blitzkit {

  /// <summary>Holder for reflection information generated from packages/core/src/protos/legacy_average_definitions.proto</summary>
  public static partial class LegacyAverageDefinitionsReflection {

    #region Descriptor
    /// <summary>File descriptor for packages/core/src/protos/legacy_average_definitions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LegacyAverageDefinitionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjlwYWNrYWdlcy9jb3JlL3NyYy9wcm90b3MvbGVnYWN5X2F2ZXJhZ2VfZGVm",
            "aW5pdGlvbnMucHJvdG8SCGJsaXR6a2l0ItgBChJBdmVyYWdlRGVmaW5pdGlv",
            "bnMSPAoIYXZlcmFnZXMYASADKAsyKi5ibGl0emtpdC5BdmVyYWdlRGVmaW5p",
            "dGlvbnMuQXZlcmFnZXNFbnRyeRIiCgdzYW1wbGVzGAIgAigLMhEuYmxpdHpr",
            "aXQuU2FtcGxlcxIMCgR0aW1lGAMgAigEGlIKDUF2ZXJhZ2VzRW50cnkSCwoD",
            "a2V5GAEgASgNEjAKBXZhbHVlGAIgASgLMiEuYmxpdHpraXQuQXZlcmFnZURl",
            "ZmluaXRpb25zRW50cnk6AjgBItUBChdBdmVyYWdlRGVmaW5pdGlvbnNFbnRy",
            "eRIwCgJtdRgBIAIoCzIkLmJsaXR6a2l0LkF2ZXJhZ2VEZWZpbml0aW9uc0Fs",
            "bFN0YXRzEjMKBXNpZ21hGAIgAigLMiQuYmxpdHpraXQuQXZlcmFnZURlZmlu",
            "aXRpb25zQWxsU3RhdHMSLwoBchgDIAIoCzIkLmJsaXR6a2l0LkF2ZXJhZ2VE",
            "ZWZpbml0aW9uc0FsbFN0YXRzEiIKB3NhbXBsZXMYBCACKAsyES5ibGl0emtp",
            "dC5TYW1wbGVzIv0CChpBdmVyYWdlRGVmaW5pdGlvbnNBbGxTdGF0cxIPCgdi",
            "YXR0bGVzGAEgAigCEhYKDmNhcHR1cmVfcG9pbnRzGAIgAigCEhQKDGRhbWFn",
            "ZV9kZWFsdBgDIAIoAhIXCg9kYW1hZ2VfcmVjZWl2ZWQYBCACKAISHgoWZHJv",
            "cHBlZF9jYXB0dXJlX3BvaW50cxgFIAIoAhINCgVmcmFncxgGIAIoAhIPCgdm",
            "cmFnczhwGAcgAigCEgwKBGhpdHMYCCACKAISDgoGbG9zc2VzGAkgAigCEhEK",
            "CW1heF9mcmFncxgKIAIoAhIOCgZtYXhfeHAYCyACKAISDQoFc2hvdHMYDCAC",
            "KAISDwoHc3BvdHRlZBgNIAIoAhIYChBzdXJ2aXZlZF9iYXR0bGVzGA4gAigC",
            "EhgKEHdpbl9hbmRfc3Vydml2ZWQYDyACKAISDAoEd2lucxgQIAIoAhIKCgJ4",
            "cBgRIAIoAhIYChBiYXR0bGVfbGlmZV90aW1lGBIgAigCImsKB1NhbXBsZXMS",
            "CwoDZF8xGAEgAigNEgsKA2RfNxgCIAIoDRIMCgRkXzMwGAMgAigNEgwKBGRf",
            "NjAYBCACKA0SDAoEZF85MBgFIAIoDRINCgVkXzEyMBgGIAIoDRINCgV0b3Rh",
            "bBgHIAIoDQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.AverageDefinitions), global::Blitzkit.AverageDefinitions.Parser, new[]{ "Averages", "Samples", "Time" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.AverageDefinitionsEntry), global::Blitzkit.AverageDefinitionsEntry.Parser, new[]{ "Mu", "Sigma", "R", "Samples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.AverageDefinitionsAllStats), global::Blitzkit.AverageDefinitionsAllStats.Parser, new[]{ "Battles", "CapturePoints", "DamageDealt", "DamageReceived", "DroppedCapturePoints", "Frags", "Frags8P", "Hits", "Losses", "MaxFrags", "MaxXp", "Shots", "Spotted", "SurvivedBattles", "WinAndSurvived", "Wins", "Xp", "BattleLifeTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blitzkit.Samples), global::Blitzkit.Samples.Parser, new[]{ "D1", "D7", "D30", "D60", "D90", "D120", "Total" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AverageDefinitions : pb::IMessage<AverageDefinitions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AverageDefinitions> _parser = new pb::MessageParser<AverageDefinitions>(() => new AverageDefinitions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AverageDefinitions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyAverageDefinitionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitions(AverageDefinitions other) : this() {
      _hasBits0 = other._hasBits0;
      averages_ = other.averages_.Clone();
      samples_ = other.samples_ != null ? other.samples_.Clone() : null;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitions Clone() {
      return new AverageDefinitions(this);
    }

    /// <summary>Field number for the "averages" field.</summary>
    public const int AveragesFieldNumber = 1;
    private static readonly pbc::MapField<uint, global::Blitzkit.AverageDefinitionsEntry>.Codec _map_averages_codec
        = new pbc::MapField<uint, global::Blitzkit.AverageDefinitionsEntry>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Blitzkit.AverageDefinitionsEntry.Parser), 10);
    private readonly pbc::MapField<uint, global::Blitzkit.AverageDefinitionsEntry> averages_ = new pbc::MapField<uint, global::Blitzkit.AverageDefinitionsEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Blitzkit.AverageDefinitionsEntry> Averages {
      get { return averages_; }
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 2;
    private global::Blitzkit.Samples samples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.Samples Samples {
      get { return samples_; }
      set {
        samples_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private readonly static ulong TimeDefaultValue = 0UL;

    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Time {
      get { if ((_hasBits0 & 1) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AverageDefinitions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AverageDefinitions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Averages.Equals(other.Averages)) return false;
      if (!object.Equals(Samples, other.Samples)) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Averages.GetHashCode();
      if (samples_ != null) hash ^= Samples.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      averages_.WriteTo(output, _map_averages_codec);
      if (samples_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Samples);
      }
      if (HasTime) {
        output.WriteRawTag(24);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      averages_.WriteTo(ref output, _map_averages_codec);
      if (samples_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Samples);
      }
      if (HasTime) {
        output.WriteRawTag(24);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += averages_.CalculateSize(_map_averages_codec);
      if (samples_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Samples);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AverageDefinitions other) {
      if (other == null) {
        return;
      }
      averages_.MergeFrom(other.averages_);
      if (other.samples_ != null) {
        if (samples_ == null) {
          Samples = new global::Blitzkit.Samples();
        }
        Samples.MergeFrom(other.Samples);
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            averages_.AddEntriesFrom(input, _map_averages_codec);
            break;
          }
          case 18: {
            if (samples_ == null) {
              Samples = new global::Blitzkit.Samples();
            }
            input.ReadMessage(Samples);
            break;
          }
          case 24: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            averages_.AddEntriesFrom(ref input, _map_averages_codec);
            break;
          }
          case 18: {
            if (samples_ == null) {
              Samples = new global::Blitzkit.Samples();
            }
            input.ReadMessage(Samples);
            break;
          }
          case 24: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AverageDefinitionsEntry : pb::IMessage<AverageDefinitionsEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AverageDefinitionsEntry> _parser = new pb::MessageParser<AverageDefinitionsEntry>(() => new AverageDefinitionsEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AverageDefinitionsEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyAverageDefinitionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsEntry(AverageDefinitionsEntry other) : this() {
      mu_ = other.mu_ != null ? other.mu_.Clone() : null;
      sigma_ = other.sigma_ != null ? other.sigma_.Clone() : null;
      r_ = other.r_ != null ? other.r_.Clone() : null;
      samples_ = other.samples_ != null ? other.samples_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsEntry Clone() {
      return new AverageDefinitionsEntry(this);
    }

    /// <summary>Field number for the "mu" field.</summary>
    public const int MuFieldNumber = 1;
    private global::Blitzkit.AverageDefinitionsAllStats mu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.AverageDefinitionsAllStats Mu {
      get { return mu_; }
      set {
        mu_ = value;
      }
    }

    /// <summary>Field number for the "sigma" field.</summary>
    public const int SigmaFieldNumber = 2;
    private global::Blitzkit.AverageDefinitionsAllStats sigma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.AverageDefinitionsAllStats Sigma {
      get { return sigma_; }
      set {
        sigma_ = value;
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 3;
    private global::Blitzkit.AverageDefinitionsAllStats r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.AverageDefinitionsAllStats R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 4;
    private global::Blitzkit.Samples samples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blitzkit.Samples Samples {
      get { return samples_; }
      set {
        samples_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AverageDefinitionsEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AverageDefinitionsEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mu, other.Mu)) return false;
      if (!object.Equals(Sigma, other.Sigma)) return false;
      if (!object.Equals(R, other.R)) return false;
      if (!object.Equals(Samples, other.Samples)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (mu_ != null) hash ^= Mu.GetHashCode();
      if (sigma_ != null) hash ^= Sigma.GetHashCode();
      if (r_ != null) hash ^= R.GetHashCode();
      if (samples_ != null) hash ^= Samples.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mu);
      }
      if (sigma_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sigma);
      }
      if (r_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(R);
      }
      if (samples_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Samples);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mu);
      }
      if (sigma_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sigma);
      }
      if (r_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(R);
      }
      if (samples_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Samples);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (mu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mu);
      }
      if (sigma_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sigma);
      }
      if (r_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(R);
      }
      if (samples_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Samples);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AverageDefinitionsEntry other) {
      if (other == null) {
        return;
      }
      if (other.mu_ != null) {
        if (mu_ == null) {
          Mu = new global::Blitzkit.AverageDefinitionsAllStats();
        }
        Mu.MergeFrom(other.Mu);
      }
      if (other.sigma_ != null) {
        if (sigma_ == null) {
          Sigma = new global::Blitzkit.AverageDefinitionsAllStats();
        }
        Sigma.MergeFrom(other.Sigma);
      }
      if (other.r_ != null) {
        if (r_ == null) {
          R = new global::Blitzkit.AverageDefinitionsAllStats();
        }
        R.MergeFrom(other.R);
      }
      if (other.samples_ != null) {
        if (samples_ == null) {
          Samples = new global::Blitzkit.Samples();
        }
        Samples.MergeFrom(other.Samples);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mu_ == null) {
              Mu = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(Mu);
            break;
          }
          case 18: {
            if (sigma_ == null) {
              Sigma = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(Sigma);
            break;
          }
          case 26: {
            if (r_ == null) {
              R = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(R);
            break;
          }
          case 34: {
            if (samples_ == null) {
              Samples = new global::Blitzkit.Samples();
            }
            input.ReadMessage(Samples);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mu_ == null) {
              Mu = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(Mu);
            break;
          }
          case 18: {
            if (sigma_ == null) {
              Sigma = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(Sigma);
            break;
          }
          case 26: {
            if (r_ == null) {
              R = new global::Blitzkit.AverageDefinitionsAllStats();
            }
            input.ReadMessage(R);
            break;
          }
          case 34: {
            if (samples_ == null) {
              Samples = new global::Blitzkit.Samples();
            }
            input.ReadMessage(Samples);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AverageDefinitionsAllStats : pb::IMessage<AverageDefinitionsAllStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AverageDefinitionsAllStats> _parser = new pb::MessageParser<AverageDefinitionsAllStats>(() => new AverageDefinitionsAllStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AverageDefinitionsAllStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyAverageDefinitionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsAllStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsAllStats(AverageDefinitionsAllStats other) : this() {
      _hasBits0 = other._hasBits0;
      battles_ = other.battles_;
      capturePoints_ = other.capturePoints_;
      damageDealt_ = other.damageDealt_;
      damageReceived_ = other.damageReceived_;
      droppedCapturePoints_ = other.droppedCapturePoints_;
      frags_ = other.frags_;
      frags8P_ = other.frags8P_;
      hits_ = other.hits_;
      losses_ = other.losses_;
      maxFrags_ = other.maxFrags_;
      maxXp_ = other.maxXp_;
      shots_ = other.shots_;
      spotted_ = other.spotted_;
      survivedBattles_ = other.survivedBattles_;
      winAndSurvived_ = other.winAndSurvived_;
      wins_ = other.wins_;
      xp_ = other.xp_;
      battleLifeTime_ = other.battleLifeTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AverageDefinitionsAllStats Clone() {
      return new AverageDefinitionsAllStats(this);
    }

    /// <summary>Field number for the "battles" field.</summary>
    public const int BattlesFieldNumber = 1;
    private readonly static float BattlesDefaultValue = 0F;

    private float battles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Battles {
      get { if ((_hasBits0 & 1) != 0) { return battles_; } else { return BattlesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        battles_ = value;
      }
    }
    /// <summary>Gets whether the "battles" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBattles {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "battles" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBattles() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "capture_points" field.</summary>
    public const int CapturePointsFieldNumber = 2;
    private readonly static float CapturePointsDefaultValue = 0F;

    private float capturePoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CapturePoints {
      get { if ((_hasBits0 & 2) != 0) { return capturePoints_; } else { return CapturePointsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        capturePoints_ = value;
      }
    }
    /// <summary>Gets whether the "capture_points" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCapturePoints {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "capture_points" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCapturePoints() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "damage_dealt" field.</summary>
    public const int DamageDealtFieldNumber = 3;
    private readonly static float DamageDealtDefaultValue = 0F;

    private float damageDealt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DamageDealt {
      get { if ((_hasBits0 & 4) != 0) { return damageDealt_; } else { return DamageDealtDefaultValue; } }
      set {
        _hasBits0 |= 4;
        damageDealt_ = value;
      }
    }
    /// <summary>Gets whether the "damage_dealt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamageDealt {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "damage_dealt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamageDealt() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "damage_received" field.</summary>
    public const int DamageReceivedFieldNumber = 4;
    private readonly static float DamageReceivedDefaultValue = 0F;

    private float damageReceived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DamageReceived {
      get { if ((_hasBits0 & 8) != 0) { return damageReceived_; } else { return DamageReceivedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        damageReceived_ = value;
      }
    }
    /// <summary>Gets whether the "damage_received" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDamageReceived {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "damage_received" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDamageReceived() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "dropped_capture_points" field.</summary>
    public const int DroppedCapturePointsFieldNumber = 5;
    private readonly static float DroppedCapturePointsDefaultValue = 0F;

    private float droppedCapturePoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DroppedCapturePoints {
      get { if ((_hasBits0 & 16) != 0) { return droppedCapturePoints_; } else { return DroppedCapturePointsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        droppedCapturePoints_ = value;
      }
    }
    /// <summary>Gets whether the "dropped_capture_points" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDroppedCapturePoints {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "dropped_capture_points" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDroppedCapturePoints() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "frags" field.</summary>
    public const int FragsFieldNumber = 6;
    private readonly static float FragsDefaultValue = 0F;

    private float frags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Frags {
      get { if ((_hasBits0 & 32) != 0) { return frags_; } else { return FragsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        frags_ = value;
      }
    }
    /// <summary>Gets whether the "frags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrags {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "frags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrags() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "frags8p" field.</summary>
    public const int Frags8PFieldNumber = 7;
    private readonly static float Frags8PDefaultValue = 0F;

    private float frags8P_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Frags8P {
      get { if ((_hasBits0 & 64) != 0) { return frags8P_; } else { return Frags8PDefaultValue; } }
      set {
        _hasBits0 |= 64;
        frags8P_ = value;
      }
    }
    /// <summary>Gets whether the "frags8p" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrags8P {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "frags8p" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrags8P() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 8;
    private readonly static float HitsDefaultValue = 0F;

    private float hits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Hits {
      get { if ((_hasBits0 & 128) != 0) { return hits_; } else { return HitsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        hits_ = value;
      }
    }
    /// <summary>Gets whether the "hits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHits {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "hits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHits() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "losses" field.</summary>
    public const int LossesFieldNumber = 9;
    private readonly static float LossesDefaultValue = 0F;

    private float losses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Losses {
      get { if ((_hasBits0 & 256) != 0) { return losses_; } else { return LossesDefaultValue; } }
      set {
        _hasBits0 |= 256;
        losses_ = value;
      }
    }
    /// <summary>Gets whether the "losses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLosses {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "losses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLosses() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "max_frags" field.</summary>
    public const int MaxFragsFieldNumber = 10;
    private readonly static float MaxFragsDefaultValue = 0F;

    private float maxFrags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxFrags {
      get { if ((_hasBits0 & 512) != 0) { return maxFrags_; } else { return MaxFragsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        maxFrags_ = value;
      }
    }
    /// <summary>Gets whether the "max_frags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxFrags {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "max_frags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxFrags() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "max_xp" field.</summary>
    public const int MaxXpFieldNumber = 11;
    private readonly static float MaxXpDefaultValue = 0F;

    private float maxXp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxXp {
      get { if ((_hasBits0 & 1024) != 0) { return maxXp_; } else { return MaxXpDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        maxXp_ = value;
      }
    }
    /// <summary>Gets whether the "max_xp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxXp {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "max_xp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxXp() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "shots" field.</summary>
    public const int ShotsFieldNumber = 12;
    private readonly static float ShotsDefaultValue = 0F;

    private float shots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Shots {
      get { if ((_hasBits0 & 2048) != 0) { return shots_; } else { return ShotsDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        shots_ = value;
      }
    }
    /// <summary>Gets whether the "shots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShots {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "shots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShots() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "spotted" field.</summary>
    public const int SpottedFieldNumber = 13;
    private readonly static float SpottedDefaultValue = 0F;

    private float spotted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Spotted {
      get { if ((_hasBits0 & 4096) != 0) { return spotted_; } else { return SpottedDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        spotted_ = value;
      }
    }
    /// <summary>Gets whether the "spotted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpotted {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "spotted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpotted() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "survived_battles" field.</summary>
    public const int SurvivedBattlesFieldNumber = 14;
    private readonly static float SurvivedBattlesDefaultValue = 0F;

    private float survivedBattles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SurvivedBattles {
      get { if ((_hasBits0 & 8192) != 0) { return survivedBattles_; } else { return SurvivedBattlesDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        survivedBattles_ = value;
      }
    }
    /// <summary>Gets whether the "survived_battles" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSurvivedBattles {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "survived_battles" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSurvivedBattles() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "win_and_survived" field.</summary>
    public const int WinAndSurvivedFieldNumber = 15;
    private readonly static float WinAndSurvivedDefaultValue = 0F;

    private float winAndSurvived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float WinAndSurvived {
      get { if ((_hasBits0 & 16384) != 0) { return winAndSurvived_; } else { return WinAndSurvivedDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        winAndSurvived_ = value;
      }
    }
    /// <summary>Gets whether the "win_and_survived" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWinAndSurvived {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "win_and_survived" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWinAndSurvived() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "wins" field.</summary>
    public const int WinsFieldNumber = 16;
    private readonly static float WinsDefaultValue = 0F;

    private float wins_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Wins {
      get { if ((_hasBits0 & 32768) != 0) { return wins_; } else { return WinsDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        wins_ = value;
      }
    }
    /// <summary>Gets whether the "wins" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWins {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "wins" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWins() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "xp" field.</summary>
    public const int XpFieldNumber = 17;
    private readonly static float XpDefaultValue = 0F;

    private float xp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Xp {
      get { if ((_hasBits0 & 65536) != 0) { return xp_; } else { return XpDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        xp_ = value;
      }
    }
    /// <summary>Gets whether the "xp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasXp {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "xp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearXp() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "battle_life_time" field.</summary>
    public const int BattleLifeTimeFieldNumber = 18;
    private readonly static float BattleLifeTimeDefaultValue = 0F;

    private float battleLifeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BattleLifeTime {
      get { if ((_hasBits0 & 131072) != 0) { return battleLifeTime_; } else { return BattleLifeTimeDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        battleLifeTime_ = value;
      }
    }
    /// <summary>Gets whether the "battle_life_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBattleLifeTime {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "battle_life_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBattleLifeTime() {
      _hasBits0 &= ~131072;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AverageDefinitionsAllStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AverageDefinitionsAllStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Battles, other.Battles)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CapturePoints, other.CapturePoints)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DamageDealt, other.DamageDealt)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DamageReceived, other.DamageReceived)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DroppedCapturePoints, other.DroppedCapturePoints)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Frags, other.Frags)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Frags8P, other.Frags8P)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hits, other.Hits)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Losses, other.Losses)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxFrags, other.MaxFrags)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxXp, other.MaxXp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Shots, other.Shots)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Spotted, other.Spotted)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SurvivedBattles, other.SurvivedBattles)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WinAndSurvived, other.WinAndSurvived)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wins, other.Wins)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Xp, other.Xp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BattleLifeTime, other.BattleLifeTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBattles) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Battles);
      if (HasCapturePoints) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CapturePoints);
      if (HasDamageDealt) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DamageDealt);
      if (HasDamageReceived) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DamageReceived);
      if (HasDroppedCapturePoints) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DroppedCapturePoints);
      if (HasFrags) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Frags);
      if (HasFrags8P) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Frags8P);
      if (HasHits) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hits);
      if (HasLosses) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Losses);
      if (HasMaxFrags) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxFrags);
      if (HasMaxXp) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxXp);
      if (HasShots) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Shots);
      if (HasSpotted) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Spotted);
      if (HasSurvivedBattles) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SurvivedBattles);
      if (HasWinAndSurvived) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WinAndSurvived);
      if (HasWins) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wins);
      if (HasXp) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Xp);
      if (HasBattleLifeTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BattleLifeTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBattles) {
        output.WriteRawTag(13);
        output.WriteFloat(Battles);
      }
      if (HasCapturePoints) {
        output.WriteRawTag(21);
        output.WriteFloat(CapturePoints);
      }
      if (HasDamageDealt) {
        output.WriteRawTag(29);
        output.WriteFloat(DamageDealt);
      }
      if (HasDamageReceived) {
        output.WriteRawTag(37);
        output.WriteFloat(DamageReceived);
      }
      if (HasDroppedCapturePoints) {
        output.WriteRawTag(45);
        output.WriteFloat(DroppedCapturePoints);
      }
      if (HasFrags) {
        output.WriteRawTag(53);
        output.WriteFloat(Frags);
      }
      if (HasFrags8P) {
        output.WriteRawTag(61);
        output.WriteFloat(Frags8P);
      }
      if (HasHits) {
        output.WriteRawTag(69);
        output.WriteFloat(Hits);
      }
      if (HasLosses) {
        output.WriteRawTag(77);
        output.WriteFloat(Losses);
      }
      if (HasMaxFrags) {
        output.WriteRawTag(85);
        output.WriteFloat(MaxFrags);
      }
      if (HasMaxXp) {
        output.WriteRawTag(93);
        output.WriteFloat(MaxXp);
      }
      if (HasShots) {
        output.WriteRawTag(101);
        output.WriteFloat(Shots);
      }
      if (HasSpotted) {
        output.WriteRawTag(109);
        output.WriteFloat(Spotted);
      }
      if (HasSurvivedBattles) {
        output.WriteRawTag(117);
        output.WriteFloat(SurvivedBattles);
      }
      if (HasWinAndSurvived) {
        output.WriteRawTag(125);
        output.WriteFloat(WinAndSurvived);
      }
      if (HasWins) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Wins);
      }
      if (HasXp) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Xp);
      }
      if (HasBattleLifeTime) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(BattleLifeTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBattles) {
        output.WriteRawTag(13);
        output.WriteFloat(Battles);
      }
      if (HasCapturePoints) {
        output.WriteRawTag(21);
        output.WriteFloat(CapturePoints);
      }
      if (HasDamageDealt) {
        output.WriteRawTag(29);
        output.WriteFloat(DamageDealt);
      }
      if (HasDamageReceived) {
        output.WriteRawTag(37);
        output.WriteFloat(DamageReceived);
      }
      if (HasDroppedCapturePoints) {
        output.WriteRawTag(45);
        output.WriteFloat(DroppedCapturePoints);
      }
      if (HasFrags) {
        output.WriteRawTag(53);
        output.WriteFloat(Frags);
      }
      if (HasFrags8P) {
        output.WriteRawTag(61);
        output.WriteFloat(Frags8P);
      }
      if (HasHits) {
        output.WriteRawTag(69);
        output.WriteFloat(Hits);
      }
      if (HasLosses) {
        output.WriteRawTag(77);
        output.WriteFloat(Losses);
      }
      if (HasMaxFrags) {
        output.WriteRawTag(85);
        output.WriteFloat(MaxFrags);
      }
      if (HasMaxXp) {
        output.WriteRawTag(93);
        output.WriteFloat(MaxXp);
      }
      if (HasShots) {
        output.WriteRawTag(101);
        output.WriteFloat(Shots);
      }
      if (HasSpotted) {
        output.WriteRawTag(109);
        output.WriteFloat(Spotted);
      }
      if (HasSurvivedBattles) {
        output.WriteRawTag(117);
        output.WriteFloat(SurvivedBattles);
      }
      if (HasWinAndSurvived) {
        output.WriteRawTag(125);
        output.WriteFloat(WinAndSurvived);
      }
      if (HasWins) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Wins);
      }
      if (HasXp) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Xp);
      }
      if (HasBattleLifeTime) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(BattleLifeTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBattles) {
        size += 1 + 4;
      }
      if (HasCapturePoints) {
        size += 1 + 4;
      }
      if (HasDamageDealt) {
        size += 1 + 4;
      }
      if (HasDamageReceived) {
        size += 1 + 4;
      }
      if (HasDroppedCapturePoints) {
        size += 1 + 4;
      }
      if (HasFrags) {
        size += 1 + 4;
      }
      if (HasFrags8P) {
        size += 1 + 4;
      }
      if (HasHits) {
        size += 1 + 4;
      }
      if (HasLosses) {
        size += 1 + 4;
      }
      if (HasMaxFrags) {
        size += 1 + 4;
      }
      if (HasMaxXp) {
        size += 1 + 4;
      }
      if (HasShots) {
        size += 1 + 4;
      }
      if (HasSpotted) {
        size += 1 + 4;
      }
      if (HasSurvivedBattles) {
        size += 1 + 4;
      }
      if (HasWinAndSurvived) {
        size += 1 + 4;
      }
      if (HasWins) {
        size += 2 + 4;
      }
      if (HasXp) {
        size += 2 + 4;
      }
      if (HasBattleLifeTime) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AverageDefinitionsAllStats other) {
      if (other == null) {
        return;
      }
      if (other.HasBattles) {
        Battles = other.Battles;
      }
      if (other.HasCapturePoints) {
        CapturePoints = other.CapturePoints;
      }
      if (other.HasDamageDealt) {
        DamageDealt = other.DamageDealt;
      }
      if (other.HasDamageReceived) {
        DamageReceived = other.DamageReceived;
      }
      if (other.HasDroppedCapturePoints) {
        DroppedCapturePoints = other.DroppedCapturePoints;
      }
      if (other.HasFrags) {
        Frags = other.Frags;
      }
      if (other.HasFrags8P) {
        Frags8P = other.Frags8P;
      }
      if (other.HasHits) {
        Hits = other.Hits;
      }
      if (other.HasLosses) {
        Losses = other.Losses;
      }
      if (other.HasMaxFrags) {
        MaxFrags = other.MaxFrags;
      }
      if (other.HasMaxXp) {
        MaxXp = other.MaxXp;
      }
      if (other.HasShots) {
        Shots = other.Shots;
      }
      if (other.HasSpotted) {
        Spotted = other.Spotted;
      }
      if (other.HasSurvivedBattles) {
        SurvivedBattles = other.SurvivedBattles;
      }
      if (other.HasWinAndSurvived) {
        WinAndSurvived = other.WinAndSurvived;
      }
      if (other.HasWins) {
        Wins = other.Wins;
      }
      if (other.HasXp) {
        Xp = other.Xp;
      }
      if (other.HasBattleLifeTime) {
        BattleLifeTime = other.BattleLifeTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Battles = input.ReadFloat();
            break;
          }
          case 21: {
            CapturePoints = input.ReadFloat();
            break;
          }
          case 29: {
            DamageDealt = input.ReadFloat();
            break;
          }
          case 37: {
            DamageReceived = input.ReadFloat();
            break;
          }
          case 45: {
            DroppedCapturePoints = input.ReadFloat();
            break;
          }
          case 53: {
            Frags = input.ReadFloat();
            break;
          }
          case 61: {
            Frags8P = input.ReadFloat();
            break;
          }
          case 69: {
            Hits = input.ReadFloat();
            break;
          }
          case 77: {
            Losses = input.ReadFloat();
            break;
          }
          case 85: {
            MaxFrags = input.ReadFloat();
            break;
          }
          case 93: {
            MaxXp = input.ReadFloat();
            break;
          }
          case 101: {
            Shots = input.ReadFloat();
            break;
          }
          case 109: {
            Spotted = input.ReadFloat();
            break;
          }
          case 117: {
            SurvivedBattles = input.ReadFloat();
            break;
          }
          case 125: {
            WinAndSurvived = input.ReadFloat();
            break;
          }
          case 133: {
            Wins = input.ReadFloat();
            break;
          }
          case 141: {
            Xp = input.ReadFloat();
            break;
          }
          case 149: {
            BattleLifeTime = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Battles = input.ReadFloat();
            break;
          }
          case 21: {
            CapturePoints = input.ReadFloat();
            break;
          }
          case 29: {
            DamageDealt = input.ReadFloat();
            break;
          }
          case 37: {
            DamageReceived = input.ReadFloat();
            break;
          }
          case 45: {
            DroppedCapturePoints = input.ReadFloat();
            break;
          }
          case 53: {
            Frags = input.ReadFloat();
            break;
          }
          case 61: {
            Frags8P = input.ReadFloat();
            break;
          }
          case 69: {
            Hits = input.ReadFloat();
            break;
          }
          case 77: {
            Losses = input.ReadFloat();
            break;
          }
          case 85: {
            MaxFrags = input.ReadFloat();
            break;
          }
          case 93: {
            MaxXp = input.ReadFloat();
            break;
          }
          case 101: {
            Shots = input.ReadFloat();
            break;
          }
          case 109: {
            Spotted = input.ReadFloat();
            break;
          }
          case 117: {
            SurvivedBattles = input.ReadFloat();
            break;
          }
          case 125: {
            WinAndSurvived = input.ReadFloat();
            break;
          }
          case 133: {
            Wins = input.ReadFloat();
            break;
          }
          case 141: {
            Xp = input.ReadFloat();
            break;
          }
          case 149: {
            BattleLifeTime = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Samples : pb::IMessage<Samples>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Samples> _parser = new pb::MessageParser<Samples>(() => new Samples());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Samples> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blitzkit.LegacyAverageDefinitionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Samples() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Samples(Samples other) : this() {
      _hasBits0 = other._hasBits0;
      d1_ = other.d1_;
      d7_ = other.d7_;
      d30_ = other.d30_;
      d60_ = other.d60_;
      d90_ = other.d90_;
      d120_ = other.d120_;
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Samples Clone() {
      return new Samples(this);
    }

    /// <summary>Field number for the "d_1" field.</summary>
    public const int D1FieldNumber = 1;
    private readonly static uint D1DefaultValue = 0;

    private uint d1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D1 {
      get { if ((_hasBits0 & 1) != 0) { return d1_; } else { return D1DefaultValue; } }
      set {
        _hasBits0 |= 1;
        d1_ = value;
      }
    }
    /// <summary>Gets whether the "d_1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD1 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "d_1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD1() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "d_7" field.</summary>
    public const int D7FieldNumber = 2;
    private readonly static uint D7DefaultValue = 0;

    private uint d7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D7 {
      get { if ((_hasBits0 & 2) != 0) { return d7_; } else { return D7DefaultValue; } }
      set {
        _hasBits0 |= 2;
        d7_ = value;
      }
    }
    /// <summary>Gets whether the "d_7" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD7 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "d_7" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD7() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "d_30" field.</summary>
    public const int D30FieldNumber = 3;
    private readonly static uint D30DefaultValue = 0;

    private uint d30_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D30 {
      get { if ((_hasBits0 & 4) != 0) { return d30_; } else { return D30DefaultValue; } }
      set {
        _hasBits0 |= 4;
        d30_ = value;
      }
    }
    /// <summary>Gets whether the "d_30" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD30 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "d_30" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD30() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "d_60" field.</summary>
    public const int D60FieldNumber = 4;
    private readonly static uint D60DefaultValue = 0;

    private uint d60_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D60 {
      get { if ((_hasBits0 & 8) != 0) { return d60_; } else { return D60DefaultValue; } }
      set {
        _hasBits0 |= 8;
        d60_ = value;
      }
    }
    /// <summary>Gets whether the "d_60" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD60 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "d_60" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD60() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "d_90" field.</summary>
    public const int D90FieldNumber = 5;
    private readonly static uint D90DefaultValue = 0;

    private uint d90_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D90 {
      get { if ((_hasBits0 & 16) != 0) { return d90_; } else { return D90DefaultValue; } }
      set {
        _hasBits0 |= 16;
        d90_ = value;
      }
    }
    /// <summary>Gets whether the "d_90" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD90 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "d_90" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD90() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "d_120" field.</summary>
    public const int D120FieldNumber = 6;
    private readonly static uint D120DefaultValue = 0;

    private uint d120_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint D120 {
      get { if ((_hasBits0 & 32) != 0) { return d120_; } else { return D120DefaultValue; } }
      set {
        _hasBits0 |= 32;
        d120_ = value;
      }
    }
    /// <summary>Gets whether the "d_120" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasD120 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "d_120" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearD120() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 7;
    private readonly static uint TotalDefaultValue = 0;

    private uint total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Total {
      get { if ((_hasBits0 & 64) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 64;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotal {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotal() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Samples);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Samples other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (D1 != other.D1) return false;
      if (D7 != other.D7) return false;
      if (D30 != other.D30) return false;
      if (D60 != other.D60) return false;
      if (D90 != other.D90) return false;
      if (D120 != other.D120) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasD1) hash ^= D1.GetHashCode();
      if (HasD7) hash ^= D7.GetHashCode();
      if (HasD30) hash ^= D30.GetHashCode();
      if (HasD60) hash ^= D60.GetHashCode();
      if (HasD90) hash ^= D90.GetHashCode();
      if (HasD120) hash ^= D120.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasD1) {
        output.WriteRawTag(8);
        output.WriteUInt32(D1);
      }
      if (HasD7) {
        output.WriteRawTag(16);
        output.WriteUInt32(D7);
      }
      if (HasD30) {
        output.WriteRawTag(24);
        output.WriteUInt32(D30);
      }
      if (HasD60) {
        output.WriteRawTag(32);
        output.WriteUInt32(D60);
      }
      if (HasD90) {
        output.WriteRawTag(40);
        output.WriteUInt32(D90);
      }
      if (HasD120) {
        output.WriteRawTag(48);
        output.WriteUInt32(D120);
      }
      if (HasTotal) {
        output.WriteRawTag(56);
        output.WriteUInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasD1) {
        output.WriteRawTag(8);
        output.WriteUInt32(D1);
      }
      if (HasD7) {
        output.WriteRawTag(16);
        output.WriteUInt32(D7);
      }
      if (HasD30) {
        output.WriteRawTag(24);
        output.WriteUInt32(D30);
      }
      if (HasD60) {
        output.WriteRawTag(32);
        output.WriteUInt32(D60);
      }
      if (HasD90) {
        output.WriteRawTag(40);
        output.WriteUInt32(D90);
      }
      if (HasD120) {
        output.WriteRawTag(48);
        output.WriteUInt32(D120);
      }
      if (HasTotal) {
        output.WriteRawTag(56);
        output.WriteUInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasD1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D1);
      }
      if (HasD7) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D7);
      }
      if (HasD30) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D30);
      }
      if (HasD60) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D60);
      }
      if (HasD90) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D90);
      }
      if (HasD120) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D120);
      }
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Samples other) {
      if (other == null) {
        return;
      }
      if (other.HasD1) {
        D1 = other.D1;
      }
      if (other.HasD7) {
        D7 = other.D7;
      }
      if (other.HasD30) {
        D30 = other.D30;
      }
      if (other.HasD60) {
        D60 = other.D60;
      }
      if (other.HasD90) {
        D90 = other.D90;
      }
      if (other.HasD120) {
        D120 = other.D120;
      }
      if (other.HasTotal) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            D1 = input.ReadUInt32();
            break;
          }
          case 16: {
            D7 = input.ReadUInt32();
            break;
          }
          case 24: {
            D30 = input.ReadUInt32();
            break;
          }
          case 32: {
            D60 = input.ReadUInt32();
            break;
          }
          case 40: {
            D90 = input.ReadUInt32();
            break;
          }
          case 48: {
            D120 = input.ReadUInt32();
            break;
          }
          case 56: {
            Total = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            D1 = input.ReadUInt32();
            break;
          }
          case 16: {
            D7 = input.ReadUInt32();
            break;
          }
          case 24: {
            D30 = input.ReadUInt32();
            break;
          }
          case 32: {
            D60 = input.ReadUInt32();
            break;
          }
          case 40: {
            D90 = input.ReadUInt32();
            break;
          }
          case 48: {
            D120 = input.ReadUInt32();
            break;
          }
          case 56: {
            Total = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
