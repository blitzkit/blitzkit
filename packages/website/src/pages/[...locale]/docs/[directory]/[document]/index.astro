---
import { AstroSeo } from '@astrolib/seo';
import type { GetStaticPaths } from 'astro';
import { readFile } from 'fs/promises';
import BaseLayout from '../../../../../layouts/BaseLayout.astro';
import { getStaticPaths as parentGetStaticPaths } from '../../../index.astro';
import { Page } from './_index';

export const getStaticPaths = (async () => {
  const parentPaths = parentGetStaticPaths();
  const ROOT = '../../../../../../../../docs/';
  const files = import.meta.glob('../../../../../../../../docs/**/*.md', {
    eager: true,
  });

  return (
    await Promise.all(
      Object.keys(files).map(async (file) => {
        const couple = file.replace(ROOT, '').split('/');
        couple[1] = couple[1].replace('.md', '');
        const content = await readFile(
          `../../docs/${couple[0]}/${couple[1]}.md`,
        ).then((buffer) => buffer.toString());

        return parentPaths.map((parent) => ({
          params: {
            ...parent.params,
            directory: couple[0],
            document: couple[1],
          },
          props: { content },
        }));
      }),
    )
  ).flat();
}) satisfies GetStaticPaths;

const { content } = Astro.props;

const title = content.split('\n')[0].replace('# ', '');
---

<AstroSeo
  title={title}
  description={title}
  canonical={Astro.url.href}
  openGraph={{
    url: Astro.url.href,
    title,
    description: title,
    site_name: 'BlitzKit',
  }}
  twitter={{ cardType: 'summary_large_image' }}
/>

<BaseLayout>
  <Page content={content} />
</BaseLayout>
